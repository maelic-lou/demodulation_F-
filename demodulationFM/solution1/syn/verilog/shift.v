// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module shift (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ary_r_V_address0,
        ary_r_V_ce0,
        ary_r_V_q0,
        ary_i_V_address0,
        ary_i_V_ce0,
        ary_i_V_q0,
        ary_r_s_V_address0,
        ary_r_s_V_ce0,
        ary_r_s_V_we0,
        ary_r_s_V_d0,
        ary_i_s_V_address0,
        ary_i_s_V_ce0,
        ary_i_s_V_we0,
        ary_i_s_V_d0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [16:0] ary_r_V_address0;
output   ary_r_V_ce0;
input  [31:0] ary_r_V_q0;
output  [16:0] ary_i_V_address0;
output   ary_i_V_ce0;
input  [31:0] ary_i_V_q0;
output  [16:0] ary_r_s_V_address0;
output   ary_r_s_V_ce0;
output   ary_r_s_V_we0;
output  [31:0] ary_r_s_V_d0;
output  [16:0] ary_i_s_V_address0;
output   ary_i_s_V_ce0;
output   ary_i_s_V_we0;
output  [31:0] ary_i_s_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ary_r_V_ce0;
reg ary_i_V_ce0;
reg[16:0] ary_r_s_V_address0;
reg ary_r_s_V_ce0;
reg ary_r_s_V_we0;
reg[31:0] ary_r_s_V_d0;
reg[16:0] ary_i_s_V_address0;
reg ary_i_s_V_ce0;
reg ary_i_s_V_we0;
reg[31:0] ary_i_s_V_d0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [6:0] cos_table_address0;
reg    cos_table_ce0;
wire   [8:0] cos_table_q0;
wire   [6:0] sin_table_address0;
reg    sin_table_ce0;
wire   [8:0] sin_table_q0;
wire   [16:0] m_fu_389_p2;
reg   [16:0] m_reg_810;
wire    ap_CS_fsm_state2;
wire   [31:0] value_V_4_fu_435_p3;
reg   [31:0] value_V_4_reg_815;
wire   [0:0] icmp_ln161_fu_383_p2;
wire   [15:0] select_ln850_fu_485_p3;
reg   [15:0] select_ln850_reg_820;
wire   [5:0] idx_1_fu_493_p1;
reg   [5:0] idx_1_reg_840;
wire   [63:0] zext_ln189_fu_497_p1;
reg   [63:0] zext_ln189_reg_850;
reg   [31:0] value_r_V_reg_870;
wire    ap_CS_fsm_state3;
reg   [31:0] value_i_V_reg_875;
wire   [0:0] icmp_ln96_fu_503_p2;
reg   [0:0] icmp_ln96_reg_880;
wire  signed [39:0] sext_ln1118_fu_620_p1;
reg  signed [39:0] sext_ln1118_reg_898;
wire    ap_CS_fsm_state4;
wire  signed [39:0] sext_ln1118_1_fu_623_p1;
reg  signed [39:0] sext_ln1118_1_reg_904;
wire   [8:0] p_Val2_6_fu_731_p3;
reg   [8:0] p_Val2_6_reg_924;
wire    ap_CS_fsm_state5;
reg   [31:0] real_V_reg_929;
wire    ap_CS_fsm_state6;
reg   [31:0] imag_V_reg_935;
wire   [0:0] icmp_ln193_fu_797_p2;
reg   [0:0] icmp_ln193_reg_941;
wire   [0:0] icmp_ln198_fu_802_p2;
reg   [0:0] icmp_ln198_reg_945;
reg   [31:0] p_Val2_s_reg_206;
wire    ap_CS_fsm_state7;
reg   [16:0] m_0_reg_217;
wire   [15:0] zext_ln105_1_fu_596_p1;
reg   [15:0] ap_phi_mux_idx_3_i_phi_fu_231_p10;
wire   [0:0] and_ln100_fu_521_p2;
wire   [0:0] grp_fu_339_p2;
wire   [15:0] zext_ln109_fu_583_p1;
wire   [0:0] grp_fu_365_p2;
wire   [15:0] zext_ln113_fu_578_p1;
reg   [0:0] sign_3_i_reg_244;
wire   [15:0] zext_ln70_1_fu_715_p1;
reg   [15:0] ap_phi_mux_idx_3_i2_phi_fu_269_p10;
wire   [0:0] and_ln65_fu_640_p2;
wire   [15:0] zext_ln74_fu_702_p1;
wire   [15:0] zext_ln78_fu_697_p1;
reg   [0:0] sign_3_i3_reg_282;
wire  signed [63:0] sext_ln1265_fu_601_p1;
wire  signed [63:0] sext_ln1265_1_fu_720_p1;
wire   [16:0] ary_r_s_V_addr_1_gep_fu_174_p3;
wire   [16:0] ary_i_s_V_addr_1_gep_fu_182_p3;
wire   [16:0] ary_r_s_V_addr_gep_fu_190_p3;
wire   [16:0] ary_i_s_V_addr_gep_fu_198_p3;
wire   [31:0] grp_fu_371_p2;
wire   [31:0] grp_fu_377_p2;
wire   [9:0] grp_fu_309_p4;
wire   [8:0] grp_fu_324_p4;
wire   [0:0] grp_fu_318_p2;
wire   [0:0] grp_fu_333_p2;
wire   [8:0] grp_fu_345_p4;
wire   [0:0] grp_fu_354_p2;
wire   [0:0] grp_fu_360_p2;
wire   [39:0] lhs_V_fu_395_p3;
wire   [40:0] zext_ln728_fu_403_p1;
wire   [40:0] add_ln1192_fu_407_p2;
wire   [31:0] value_V_3_fu_413_p4;
wire   [0:0] icmp_ln1494_fu_423_p2;
wire   [31:0] value_V_fu_429_p2;
wire   [15:0] trunc_ln851_fu_461_p1;
wire   [15:0] ret_V_fu_443_p4;
wire   [0:0] icmp_ln851_fu_465_p2;
wire   [15:0] ret_V_1_fu_471_p2;
wire   [0:0] p_Result_s_fu_453_p3;
wire   [15:0] select_ln851_fu_477_p3;
wire   [0:0] tmp_fu_508_p3;
wire   [0:0] grp_fu_304_p2;
wire   [0:0] xor_ln100_fu_515_p2;
wire   [5:0] trunc_ln113_fu_534_p1;
wire   [5:0] sub_ln113_fu_537_p2;
wire   [6:0] tmp_6_fu_543_p3;
wire   [0:0] tmp_5_fu_527_p3;
wire   [6:0] sub_ln113_1_fu_551_p2;
wire   [6:0] tmp_3_fu_557_p3;
wire   [6:0] select_ln113_fu_564_p3;
wire   [6:0] idx_2_fu_572_p2;
wire   [6:0] zext_ln105_fu_587_p1;
wire   [6:0] idx_fu_590_p2;
wire   [8:0] sub_ln703_4_fu_606_p2;
wire   [8:0] p_Val2_4_fu_612_p3;
wire   [0:0] tmp_8_fu_627_p3;
wire   [0:0] xor_ln65_fu_634_p2;
wire   [5:0] trunc_ln78_fu_653_p1;
wire   [5:0] sub_ln78_fu_656_p2;
wire   [6:0] tmp_13_fu_662_p3;
wire   [0:0] tmp_12_fu_646_p3;
wire   [6:0] sub_ln78_1_fu_670_p2;
wire   [6:0] tmp_7_fu_676_p3;
wire   [6:0] select_ln78_fu_683_p3;
wire   [6:0] idx_4_fu_691_p2;
wire   [6:0] zext_ln70_fu_706_p1;
wire   [6:0] idx_3_fu_709_p2;
wire   [8:0] sub_ln703_5_fu_725_p2;
wire  signed [31:0] mul_ln700_fu_745_p0;
wire  signed [8:0] mul_ln700_fu_745_p1;
wire  signed [31:0] mul_ln1192_fu_749_p0;
wire  signed [39:0] sext_ln1118_2_fu_739_p1;
wire  signed [8:0] mul_ln1192_fu_749_p1;
wire  signed [39:0] sext_ln1118_3_fu_742_p1;
wire   [39:0] mul_ln700_fu_745_p2;
wire   [39:0] mul_ln1192_fu_749_p2;
wire   [39:0] ret_V_4_fu_755_p2;
wire  signed [31:0] mul_ln700_1_fu_771_p0;
wire  signed [8:0] mul_ln700_1_fu_771_p1;
wire  signed [31:0] mul_ln1193_fu_776_p0;
wire  signed [8:0] mul_ln1193_fu_776_p1;
wire   [39:0] mul_ln700_1_fu_771_p2;
wire   [39:0] mul_ln1193_fu_776_p2;
wire   [39:0] ret_V_5_fu_781_p2;
reg   [6:0] ap_NS_fsm;
reg    ap_condition_188;
reg    ap_condition_192;
reg    ap_condition_195;
reg    ap_condition_157;
reg    ap_condition_164;
reg    ap_condition_168;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
end

shift_cos_table #(
    .DataWidth( 9 ),
    .AddressRange( 65 ),
    .AddressWidth( 7 ))
cos_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cos_table_address0),
    .ce0(cos_table_ce0),
    .q0(cos_table_q0)
);

shift_sin_table #(
    .DataWidth( 9 ),
    .AddressRange( 65 ),
    .AddressWidth( 7 ))
sin_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sin_table_address0),
    .ce0(sin_table_ce0),
    .q0(sin_table_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        m_0_reg_217 <= m_reg_810;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        m_0_reg_217 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_Val2_s_reg_206 <= value_V_4_reg_815;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Val2_s_reg_206 <= 32'd4293772758;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln96_reg_880 == 1'd0) & (1'd0 == and_ln65_fu_640_p2) & (grp_fu_365_p2 == 1'd0) & (grp_fu_339_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln96_reg_880 == 1'd0) & (1'd0 == and_ln65_fu_640_p2) & (grp_fu_339_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (grp_fu_365_p2 == 1'd1)))) begin
        sign_3_i3_reg_282 <= 1'd1;
    end else if ((((icmp_ln96_reg_880 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln96_reg_880 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln65_fu_640_p2)) | ((icmp_ln96_reg_880 == 1'd0) & (1'd0 == and_ln65_fu_640_p2) & (1'b1 == ap_CS_fsm_state4) & (grp_fu_339_p2 == 1'd1)))) begin
        sign_3_i3_reg_282 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln96_fu_503_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln96_fu_503_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln100_fu_521_p2)) | ((icmp_ln96_fu_503_p2 == 1'd0) & (grp_fu_365_p2 == 1'd0) & (grp_fu_339_p2 == 1'd0) & (1'd0 == and_ln100_fu_521_p2) & (1'b1 == ap_CS_fsm_state3)))) begin
        sign_3_i_reg_244 <= 1'd0;
    end else if ((((icmp_ln96_fu_503_p2 == 1'd0) & (grp_fu_339_p2 == 1'd0) & (1'd0 == and_ln100_fu_521_p2) & (1'b1 == ap_CS_fsm_state3) & (grp_fu_365_p2 == 1'd1)) | ((icmp_ln96_fu_503_p2 == 1'd0) & (1'd0 == and_ln100_fu_521_p2) & (1'b1 == ap_CS_fsm_state3) & (grp_fu_339_p2 == 1'd1)))) begin
        sign_3_i_reg_244 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln193_reg_941 <= icmp_ln193_fu_797_p2;
        imag_V_reg_935 <= {{ret_V_5_fu_781_p2[39:8]}};
        real_V_reg_929 <= {{ret_V_4_fu_755_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln193_fu_797_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        icmp_ln198_reg_945 <= icmp_ln198_fu_802_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln96_reg_880 <= icmp_ln96_fu_503_p2;
        value_i_V_reg_875 <= ary_i_V_q0;
        value_r_V_reg_870 <= ary_r_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln161_fu_383_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        idx_1_reg_840 <= idx_1_fu_493_p1;
        select_ln850_reg_820 <= select_ln850_fu_485_p3;
        value_V_4_reg_815 <= value_V_4_fu_435_p3;
        zext_ln189_reg_850[16 : 0] <= zext_ln189_fu_497_p1[16 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        m_reg_810 <= m_fu_389_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_Val2_6_reg_924 <= p_Val2_6_fu_731_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sext_ln1118_1_reg_904 <= sext_ln1118_1_fu_623_p1;
        sext_ln1118_reg_898 <= sext_ln1118_fu_620_p1;
    end
end

always @ (*) begin
    if ((((icmp_ln161_fu_383_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        if (((icmp_ln96_reg_880 == 1'd0) & (1'd1 == and_ln65_fu_640_p2))) begin
            ap_phi_mux_idx_3_i2_phi_fu_269_p10 = select_ln850_reg_820;
        end else if ((icmp_ln96_reg_880 == 1'd1)) begin
            ap_phi_mux_idx_3_i2_phi_fu_269_p10 = 16'd0;
        end else if ((1'b1 == ap_condition_195)) begin
            ap_phi_mux_idx_3_i2_phi_fu_269_p10 = zext_ln78_fu_697_p1;
        end else if ((1'b1 == ap_condition_192)) begin
            ap_phi_mux_idx_3_i2_phi_fu_269_p10 = zext_ln74_fu_702_p1;
        end else if ((1'b1 == ap_condition_188)) begin
            ap_phi_mux_idx_3_i2_phi_fu_269_p10 = zext_ln70_1_fu_715_p1;
        end else begin
            ap_phi_mux_idx_3_i2_phi_fu_269_p10 = 'bx;
        end
    end else begin
        ap_phi_mux_idx_3_i2_phi_fu_269_p10 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if (((icmp_ln96_fu_503_p2 == 1'd0) & (1'd1 == and_ln100_fu_521_p2))) begin
            ap_phi_mux_idx_3_i_phi_fu_231_p10 = select_ln850_reg_820;
        end else if ((icmp_ln96_fu_503_p2 == 1'd1)) begin
            ap_phi_mux_idx_3_i_phi_fu_231_p10 = 16'd0;
        end else if ((1'b1 == ap_condition_168)) begin
            ap_phi_mux_idx_3_i_phi_fu_231_p10 = zext_ln113_fu_578_p1;
        end else if ((1'b1 == ap_condition_164)) begin
            ap_phi_mux_idx_3_i_phi_fu_231_p10 = zext_ln109_fu_583_p1;
        end else if ((1'b1 == ap_condition_157)) begin
            ap_phi_mux_idx_3_i_phi_fu_231_p10 = zext_ln105_1_fu_596_p1;
        end else begin
            ap_phi_mux_idx_3_i_phi_fu_231_p10 = 'bx;
        end
    end else begin
        ap_phi_mux_idx_3_i_phi_fu_231_p10 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln161_fu_383_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ary_i_V_ce0 = 1'b1;
    end else begin
        ary_i_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        if ((icmp_ln193_reg_941 == 1'd1)) begin
            ary_i_s_V_address0 = ary_i_s_V_addr_gep_fu_198_p3;
        end else if (((icmp_ln193_reg_941 == 1'd0) & (icmp_ln198_reg_945 == 1'd1))) begin
            ary_i_s_V_address0 = ary_i_s_V_addr_1_gep_fu_182_p3;
        end else if (((icmp_ln198_reg_945 == 1'd0) & (icmp_ln193_reg_941 == 1'd0))) begin
            ary_i_s_V_address0 = zext_ln189_reg_850;
        end else begin
            ary_i_s_V_address0 = 'bx;
        end
    end else begin
        ary_i_s_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (icmp_ln193_reg_941 == 1'd1)) | ((icmp_ln193_reg_941 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln198_reg_945 == 1'd1)) | ((icmp_ln198_reg_945 == 1'd0) & (icmp_ln193_reg_941 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        ary_i_s_V_ce0 = 1'b1;
    end else begin
        ary_i_s_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (icmp_ln193_reg_941 == 1'd1)) | ((icmp_ln193_reg_941 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln198_reg_945 == 1'd1)))) begin
        ary_i_s_V_d0 = grp_fu_377_p2;
    end else if (((icmp_ln198_reg_945 == 1'd0) & (icmp_ln193_reg_941 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        ary_i_s_V_d0 = imag_V_reg_935;
    end else begin
        ary_i_s_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (icmp_ln193_reg_941 == 1'd1)) | ((icmp_ln193_reg_941 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln198_reg_945 == 1'd1)) | ((icmp_ln198_reg_945 == 1'd0) & (icmp_ln193_reg_941 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        ary_i_s_V_we0 = 1'b1;
    end else begin
        ary_i_s_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ary_r_V_ce0 = 1'b1;
    end else begin
        ary_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        if ((icmp_ln193_reg_941 == 1'd1)) begin
            ary_r_s_V_address0 = ary_r_s_V_addr_gep_fu_190_p3;
        end else if (((icmp_ln193_reg_941 == 1'd0) & (icmp_ln198_reg_945 == 1'd1))) begin
            ary_r_s_V_address0 = ary_r_s_V_addr_1_gep_fu_174_p3;
        end else if (((icmp_ln198_reg_945 == 1'd0) & (icmp_ln193_reg_941 == 1'd0))) begin
            ary_r_s_V_address0 = zext_ln189_reg_850;
        end else begin
            ary_r_s_V_address0 = 'bx;
        end
    end else begin
        ary_r_s_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (icmp_ln193_reg_941 == 1'd1)) | ((icmp_ln193_reg_941 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln198_reg_945 == 1'd1)) | ((icmp_ln198_reg_945 == 1'd0) & (icmp_ln193_reg_941 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        ary_r_s_V_ce0 = 1'b1;
    end else begin
        ary_r_s_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (icmp_ln193_reg_941 == 1'd1)) | ((icmp_ln193_reg_941 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln198_reg_945 == 1'd1)))) begin
        ary_r_s_V_d0 = grp_fu_371_p2;
    end else if (((icmp_ln198_reg_945 == 1'd0) & (icmp_ln193_reg_941 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        ary_r_s_V_d0 = real_V_reg_929;
    end else begin
        ary_r_s_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (icmp_ln193_reg_941 == 1'd1)) | ((icmp_ln193_reg_941 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln198_reg_945 == 1'd1)) | ((icmp_ln198_reg_945 == 1'd0) & (icmp_ln193_reg_941 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        ary_r_s_V_we0 = 1'b1;
    end else begin
        ary_r_s_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cos_table_ce0 = 1'b1;
    end else begin
        cos_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sin_table_ce0 = 1'b1;
    end else begin
        sin_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln161_fu_383_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_fu_407_p2 = (41'd305801472 + zext_ln728_fu_403_p1);

assign and_ln100_fu_521_p2 = (xor_ln100_fu_515_p2 & grp_fu_304_p2);

assign and_ln65_fu_640_p2 = (xor_ln65_fu_634_p2 & grp_fu_304_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_condition_157 = ((icmp_ln96_fu_503_p2 == 1'd0) & (1'd0 == and_ln100_fu_521_p2) & (grp_fu_339_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_164 = ((icmp_ln96_fu_503_p2 == 1'd0) & (grp_fu_339_p2 == 1'd0) & (1'd0 == and_ln100_fu_521_p2) & (grp_fu_365_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_168 = ((icmp_ln96_fu_503_p2 == 1'd0) & (grp_fu_365_p2 == 1'd0) & (grp_fu_339_p2 == 1'd0) & (1'd0 == and_ln100_fu_521_p2));
end

always @ (*) begin
    ap_condition_188 = ((icmp_ln96_reg_880 == 1'd0) & (1'd0 == and_ln65_fu_640_p2) & (grp_fu_339_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_192 = ((icmp_ln96_reg_880 == 1'd0) & (1'd0 == and_ln65_fu_640_p2) & (grp_fu_339_p2 == 1'd0) & (grp_fu_365_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_195 = ((icmp_ln96_reg_880 == 1'd0) & (1'd0 == and_ln65_fu_640_p2) & (grp_fu_365_p2 == 1'd0) & (grp_fu_339_p2 == 1'd0));
end

assign ary_i_V_address0 = zext_ln189_fu_497_p1;

assign ary_i_s_V_addr_1_gep_fu_182_p3 = zext_ln189_reg_850;

assign ary_i_s_V_addr_gep_fu_198_p3 = zext_ln189_reg_850;

assign ary_r_V_address0 = zext_ln189_fu_497_p1;

assign ary_r_s_V_addr_1_gep_fu_174_p3 = zext_ln189_reg_850;

assign ary_r_s_V_addr_gep_fu_190_p3 = zext_ln189_reg_850;

assign cos_table_address0 = sext_ln1265_fu_601_p1;

assign grp_fu_304_p2 = (($signed(select_ln850_reg_820) < $signed(16'd65)) ? 1'b1 : 1'b0);

assign grp_fu_309_p4 = {{select_ln850_reg_820[15:6]}};

assign grp_fu_318_p2 = (($signed(grp_fu_309_p4) > $signed(10'd0)) ? 1'b1 : 1'b0);

assign grp_fu_324_p4 = {{select_ln850_reg_820[15:7]}};

assign grp_fu_333_p2 = (($signed(grp_fu_324_p4) < $signed(9'd1)) ? 1'b1 : 1'b0);

assign grp_fu_339_p2 = (grp_fu_333_p2 & grp_fu_318_p2);

assign grp_fu_345_p4 = {{select_ln850_reg_820[15:7]}};

assign grp_fu_354_p2 = (($signed(grp_fu_345_p4) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign grp_fu_360_p2 = (($signed(select_ln850_reg_820) < $signed(16'd192)) ? 1'b1 : 1'b0);

assign grp_fu_365_p2 = (grp_fu_360_p2 & grp_fu_354_p2);

assign grp_fu_371_p2 = (32'd0 - real_V_reg_929);

assign grp_fu_377_p2 = (32'd0 - imag_V_reg_935);

assign icmp_ln1494_fu_423_p2 = (($signed(value_V_3_fu_413_p4) > $signed(32'd16777216)) ? 1'b1 : 1'b0);

assign icmp_ln161_fu_383_p2 = ((m_0_reg_217 == 17'd100000) ? 1'b1 : 1'b0);

assign icmp_ln193_fu_797_p2 = ((select_ln850_reg_820 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln198_fu_802_p2 = ((select_ln850_reg_820 == 16'd64) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_465_p2 = ((trunc_ln851_fu_461_p1 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_503_p2 = ((select_ln850_reg_820 == 16'd256) ? 1'b1 : 1'b0);

assign idx_1_fu_493_p1 = select_ln850_fu_485_p3[5:0];

assign idx_2_fu_572_p2 = ($signed(7'd64) - $signed(select_ln113_fu_564_p3));

assign idx_3_fu_709_p2 = ($signed(7'd64) - $signed(zext_ln70_fu_706_p1));

assign idx_4_fu_691_p2 = ($signed(7'd64) - $signed(select_ln78_fu_683_p3));

assign idx_fu_590_p2 = ($signed(7'd64) - $signed(zext_ln105_fu_587_p1));

assign lhs_V_fu_395_p3 = {{p_Val2_s_reg_206}, {8'd0}};

assign m_fu_389_p2 = (m_0_reg_217 + 17'd1);

assign mul_ln1192_fu_749_p0 = sext_ln1118_2_fu_739_p1;

assign mul_ln1192_fu_749_p1 = sext_ln1118_3_fu_742_p1;

assign mul_ln1192_fu_749_p2 = ($signed(mul_ln1192_fu_749_p0) * $signed(mul_ln1192_fu_749_p1));

assign mul_ln1193_fu_776_p0 = sext_ln1118_reg_898;

assign mul_ln1193_fu_776_p1 = sext_ln1118_3_fu_742_p1;

assign mul_ln1193_fu_776_p2 = ($signed(mul_ln1193_fu_776_p0) * $signed(mul_ln1193_fu_776_p1));

assign mul_ln700_1_fu_771_p0 = sext_ln1118_2_fu_739_p1;

assign mul_ln700_1_fu_771_p1 = sext_ln1118_1_reg_904;

assign mul_ln700_1_fu_771_p2 = ($signed(mul_ln700_1_fu_771_p0) * $signed(mul_ln700_1_fu_771_p1));

assign mul_ln700_fu_745_p0 = sext_ln1118_reg_898;

assign mul_ln700_fu_745_p1 = sext_ln1118_1_reg_904;

assign mul_ln700_fu_745_p2 = ($signed(mul_ln700_fu_745_p0) * $signed(mul_ln700_fu_745_p1));

assign p_Result_s_fu_453_p3 = value_V_4_fu_435_p3[32'd31];

assign p_Val2_4_fu_612_p3 = ((sign_3_i_reg_244[0:0] === 1'b1) ? sub_ln703_4_fu_606_p2 : cos_table_q0);

assign p_Val2_6_fu_731_p3 = ((sign_3_i3_reg_282[0:0] === 1'b1) ? sub_ln703_5_fu_725_p2 : sin_table_q0);

assign ret_V_1_fu_471_p2 = (16'd1 + ret_V_fu_443_p4);

assign ret_V_4_fu_755_p2 = (mul_ln700_fu_745_p2 + mul_ln1192_fu_749_p2);

assign ret_V_5_fu_781_p2 = (mul_ln700_1_fu_771_p2 - mul_ln1193_fu_776_p2);

assign ret_V_fu_443_p4 = {{value_V_4_fu_435_p3[31:16]}};

assign select_ln113_fu_564_p3 = ((tmp_5_fu_527_p3[0:0] === 1'b1) ? sub_ln113_1_fu_551_p2 : tmp_3_fu_557_p3);

assign select_ln78_fu_683_p3 = ((tmp_12_fu_646_p3[0:0] === 1'b1) ? sub_ln78_1_fu_670_p2 : tmp_7_fu_676_p3);

assign select_ln850_fu_485_p3 = ((p_Result_s_fu_453_p3[0:0] === 1'b1) ? select_ln851_fu_477_p3 : ret_V_fu_443_p4);

assign select_ln851_fu_477_p3 = ((icmp_ln851_fu_465_p2[0:0] === 1'b1) ? ret_V_fu_443_p4 : ret_V_1_fu_471_p2);

assign sext_ln1118_1_fu_623_p1 = $signed(p_Val2_4_fu_612_p3);

assign sext_ln1118_2_fu_739_p1 = $signed(value_i_V_reg_875);

assign sext_ln1118_3_fu_742_p1 = $signed(p_Val2_6_reg_924);

assign sext_ln1118_fu_620_p1 = $signed(value_r_V_reg_870);

assign sext_ln1265_1_fu_720_p1 = $signed(ap_phi_mux_idx_3_i2_phi_fu_269_p10);

assign sext_ln1265_fu_601_p1 = $signed(ap_phi_mux_idx_3_i_phi_fu_231_p10);

assign sin_table_address0 = sext_ln1265_1_fu_720_p1;

assign sub_ln113_1_fu_551_p2 = (7'd0 - tmp_6_fu_543_p3);

assign sub_ln113_fu_537_p2 = (6'd0 - trunc_ln113_fu_534_p1);

assign sub_ln703_4_fu_606_p2 = (9'd0 - cos_table_q0);

assign sub_ln703_5_fu_725_p2 = (9'd0 - sin_table_q0);

assign sub_ln78_1_fu_670_p2 = (7'd0 - tmp_13_fu_662_p3);

assign sub_ln78_fu_656_p2 = (6'd0 - trunc_ln78_fu_653_p1);

assign tmp_12_fu_646_p3 = select_ln850_reg_820[32'd15];

assign tmp_13_fu_662_p3 = {{1'd0}, {sub_ln78_fu_656_p2}};

assign tmp_3_fu_557_p3 = {{1'd0}, {idx_1_reg_840}};

assign tmp_5_fu_527_p3 = select_ln850_reg_820[32'd15];

assign tmp_6_fu_543_p3 = {{1'd0}, {sub_ln113_fu_537_p2}};

assign tmp_7_fu_676_p3 = {{1'd0}, {idx_1_reg_840}};

assign tmp_8_fu_627_p3 = select_ln850_reg_820[32'd15];

assign tmp_fu_508_p3 = select_ln850_reg_820[32'd15];

assign trunc_ln113_fu_534_p1 = select_ln850_reg_820[5:0];

assign trunc_ln78_fu_653_p1 = select_ln850_reg_820[5:0];

assign trunc_ln851_fu_461_p1 = value_V_4_fu_435_p3[15:0];

assign value_V_3_fu_413_p4 = {{add_ln1192_fu_407_p2[39:8]}};

assign value_V_4_fu_435_p3 = ((icmp_ln1494_fu_423_p2[0:0] === 1'b1) ? value_V_fu_429_p2 : value_V_3_fu_413_p4);

assign value_V_fu_429_p2 = ($signed(32'd4278190080) + $signed(value_V_3_fu_413_p4));

assign xor_ln100_fu_515_p2 = (tmp_fu_508_p3 ^ 1'd1);

assign xor_ln65_fu_634_p2 = (tmp_8_fu_627_p3 ^ 1'd1);

assign zext_ln105_1_fu_596_p1 = idx_fu_590_p2;

assign zext_ln105_fu_587_p1 = idx_1_reg_840;

assign zext_ln109_fu_583_p1 = idx_1_reg_840;

assign zext_ln113_fu_578_p1 = idx_2_fu_572_p2;

assign zext_ln189_fu_497_p1 = m_0_reg_217;

assign zext_ln70_1_fu_715_p1 = idx_3_fu_709_p2;

assign zext_ln70_fu_706_p1 = idx_1_reg_840;

assign zext_ln728_fu_403_p1 = lhs_V_fu_395_p3;

assign zext_ln74_fu_702_p1 = idx_1_reg_840;

assign zext_ln78_fu_697_p1 = idx_4_fu_691_p2;

always @ (posedge ap_clk) begin
    zext_ln189_reg_850[63:17] <= 47'b00000000000000000000000000000000000000000000000;
end

endmodule //shift
