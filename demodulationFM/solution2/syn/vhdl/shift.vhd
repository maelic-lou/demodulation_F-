-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity shift is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ary_r_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ary_r_V_empty_n : IN STD_LOGIC;
    ary_r_V_read : OUT STD_LOGIC;
    ary_i_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ary_i_V_empty_n : IN STD_LOGIC;
    ary_i_V_read : OUT STD_LOGIC;
    ary_r_s_V_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    ary_r_s_V_ce0 : OUT STD_LOGIC;
    ary_r_s_V_we0 : OUT STD_LOGIC;
    ary_r_s_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ary_i_s_V_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    ary_i_s_V_ce0 : OUT STD_LOGIC;
    ary_i_s_V_we0 : OUT STD_LOGIC;
    ary_i_s_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of shift is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_FFEDC5D6 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111011011100010111010110";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_41 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv16_C0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000011000000";
    constant ap_const_lv17_186A0 : STD_LOGIC_VECTOR (16 downto 0) := "11000011010100000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv41_123A2900 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000010010001110100010100100000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_1000000 : STD_LOGIC_VECTOR (31 downto 0) := "00000001000000000000000000000000";
    constant ap_const_lv32_FF000000 : STD_LOGIC_VECTOR (31 downto 0) := "11111111000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_100 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv16_40 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal cos_table_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal cos_table_ce0 : STD_LOGIC;
    signal cos_table_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sin_table_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sin_table_ce0 : STD_LOGIC;
    signal sin_table_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ary_r_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ary_i_V_blk_n : STD_LOGIC;
    signal m_fu_384_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal m_reg_803 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal value_V_4_fu_430_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal value_V_4_reg_808 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln161_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln850_fu_480_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln850_reg_813 : STD_LOGIC_VECTOR (15 downto 0);
    signal idx_1_fu_488_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal idx_1_reg_833 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln189_fu_492_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln189_reg_843 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal value_r_V_reg_853 : STD_LOGIC_VECTOR (31 downto 0);
    signal value_i_V_reg_858 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln96_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_reg_863 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1118_fu_613_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln1118_reg_881 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal sext_ln1118_1_fu_616_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln1118_1_reg_887 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Val2_6_fu_724_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_6_reg_907 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal real_V_reg_912 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal imag_V_reg_918 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln193_fu_790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln193_reg_924 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln198_fu_795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln198_reg_928 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_reg_200 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal m_0_reg_211 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln105_1_fu_589_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_idx_3_i_phi_fu_226_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln100_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln109_fu_576_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln113_fu_571_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sign_3_i_reg_239 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln70_1_fu_708_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_idx_3_i2_phi_fu_264_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln65_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln74_fu_695_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln78_fu_690_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sign_3_i3_reg_277 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1265_fu_594_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1265_1_fu_713_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ary_r_s_V_addr_1_gep_fu_168_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal ary_i_s_V_addr_1_gep_fu_176_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal ary_r_s_V_addr_gep_fu_184_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal ary_i_s_V_addr_gep_fu_192_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_366_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_372_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_304_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_319_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_340_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_fu_390_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal zext_ln728_fu_398_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln1192_fu_402_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal value_V_3_fu_408_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal value_V_fu_424_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln851_fu_456_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_fu_438_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln851_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_1_fu_466_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_448_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_fu_472_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_501_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln100_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln113_fu_527_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln113_fu_530_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_fu_536_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_5_fu_520_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln113_1_fu_544_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_fu_550_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln113_fu_557_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal idx_2_fu_565_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln105_fu_580_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal idx_fu_583_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln703_4_fu_599_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_4_fu_605_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_fu_620_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln78_fu_646_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln78_fu_649_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_13_fu_655_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_12_fu_639_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln78_1_fu_663_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_7_fu_669_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln78_fu_676_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal idx_4_fu_684_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln70_fu_699_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal idx_3_fu_702_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln703_5_fu_718_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln700_fu_738_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln700_fu_738_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1192_fu_742_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1118_2_fu_732_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal mul_ln1192_fu_742_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_3_fu_735_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal mul_ln700_fu_738_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal mul_ln1192_fu_742_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal ret_V_4_fu_748_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal mul_ln700_1_fu_764_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln700_1_fu_764_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1193_fu_769_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1193_fu_769_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln700_1_fu_764_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal mul_ln1193_fu_769_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal ret_V_5_fu_774_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_condition_195 : BOOLEAN;
    signal ap_condition_199 : BOOLEAN;
    signal ap_condition_202 : BOOLEAN;
    signal ap_condition_159 : BOOLEAN;
    signal ap_condition_167 : BOOLEAN;
    signal ap_condition_172 : BOOLEAN;

    component shift_cos_table IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component shift_sin_table IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;



begin
    cos_table_U : component shift_cos_table
    generic map (
        DataWidth => 9,
        AddressRange => 65,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cos_table_address0,
        ce0 => cos_table_ce0,
        q0 => cos_table_q0);

    sin_table_U : component shift_sin_table
    generic map (
        DataWidth => 9,
        AddressRange => 65,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sin_table_address0,
        ce0 => sin_table_ce0,
        q0 => sin_table_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    m_0_reg_211_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                m_0_reg_211 <= m_reg_803;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                m_0_reg_211 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    p_Val2_s_reg_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                p_Val2_s_reg_200 <= value_V_4_reg_808;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_Val2_s_reg_200 <= ap_const_lv32_FFEDC5D6;
            end if; 
        end if;
    end process;

    sign_3_i3_reg_277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln65_fu_633_p2) and (grp_fu_360_p2 = ap_const_lv1_0) and (grp_fu_334_p2 = ap_const_lv1_0) and (icmp_ln96_reg_863 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_0 = and_ln65_fu_633_p2) and (grp_fu_334_p2 = ap_const_lv1_0) and (icmp_ln96_reg_863 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_fu_360_p2 = ap_const_lv1_1)))) then 
                sign_3_i3_reg_277 <= ap_const_lv1_1;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln96_reg_863 = ap_const_lv1_1)) or ((icmp_ln96_reg_863 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln65_fu_633_p2)) or ((ap_const_lv1_0 = and_ln65_fu_633_p2) and (icmp_ln96_reg_863 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_fu_334_p2 = ap_const_lv1_1)))) then 
                sign_3_i3_reg_277 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    sign_3_i_reg_239_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ary_i_V_empty_n = ap_const_logic_0) or (ary_r_V_empty_n = ap_const_logic_0))) and (icmp_ln96_fu_496_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((ary_i_V_empty_n = ap_const_logic_0) or (ary_r_V_empty_n = ap_const_logic_0))) and (icmp_ln96_fu_496_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln100_fu_514_p2)) or (not(((ary_i_V_empty_n = ap_const_logic_0) or (ary_r_V_empty_n = ap_const_logic_0))) and (icmp_ln96_fu_496_p2 = ap_const_lv1_0) and (grp_fu_360_p2 = ap_const_lv1_0) and (grp_fu_334_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln100_fu_514_p2) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                sign_3_i_reg_239 <= ap_const_lv1_0;
            elsif (((not(((ary_i_V_empty_n = ap_const_logic_0) or (ary_r_V_empty_n = ap_const_logic_0))) and (icmp_ln96_fu_496_p2 = ap_const_lv1_0) and (grp_fu_334_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln100_fu_514_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (grp_fu_360_p2 = ap_const_lv1_1)) or (not(((ary_i_V_empty_n = ap_const_logic_0) or (ary_r_V_empty_n = ap_const_logic_0))) and (icmp_ln96_fu_496_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln100_fu_514_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (grp_fu_334_p2 = ap_const_lv1_1)))) then 
                sign_3_i_reg_239 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                icmp_ln193_reg_924 <= icmp_ln193_fu_790_p2;
                imag_V_reg_918 <= ret_V_5_fu_774_p2(39 downto 8);
                real_V_reg_912 <= ret_V_4_fu_748_p2(39 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln193_fu_790_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                icmp_ln198_reg_928 <= icmp_ln198_fu_795_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ary_i_V_empty_n = ap_const_logic_0) or (ary_r_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln96_reg_863 <= icmp_ln96_fu_496_p2;
                value_i_V_reg_858 <= ary_i_V_dout;
                value_r_V_reg_853 <= ary_r_V_dout;
                    zext_ln189_reg_843(16 downto 0) <= zext_ln189_fu_492_p1(16 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln161_fu_378_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                idx_1_reg_833 <= idx_1_fu_488_p1;
                select_ln850_reg_813 <= select_ln850_fu_480_p3;
                value_V_4_reg_808 <= value_V_4_fu_430_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                m_reg_803 <= m_fu_384_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                p_Val2_6_reg_907 <= p_Val2_6_fu_724_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                sext_ln1118_1_reg_887 <= sext_ln1118_1_fu_616_p1;
                sext_ln1118_reg_881 <= sext_ln1118_fu_613_p1;
            end if;
        end if;
    end process;
    zext_ln189_reg_843(63 downto 17) <= "00000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ary_r_V_empty_n, ary_i_V_empty_n, ap_CS_fsm_state3, ap_CS_fsm_state2, icmp_ln161_fu_378_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln161_fu_378_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((ary_i_V_empty_n = ap_const_logic_0) or (ary_r_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln1192_fu_402_p2 <= std_logic_vector(unsigned(ap_const_lv41_123A2900) + unsigned(zext_ln728_fu_398_p1));
    and_ln100_fu_514_p2 <= (xor_ln100_fu_508_p2 and grp_fu_299_p2);
    and_ln65_fu_633_p2 <= (xor_ln65_fu_627_p2 and grp_fu_299_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_block_state3_assign_proc : process(ary_r_V_empty_n, ary_i_V_empty_n)
    begin
                ap_block_state3 <= ((ary_i_V_empty_n = ap_const_logic_0) or (ary_r_V_empty_n = ap_const_logic_0));
    end process;


    ap_condition_159_assign_proc : process(icmp_ln96_fu_496_p2, and_ln100_fu_514_p2, grp_fu_334_p2)
    begin
                ap_condition_159 <= ((icmp_ln96_fu_496_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln100_fu_514_p2) and (grp_fu_334_p2 = ap_const_lv1_1));
    end process;


    ap_condition_167_assign_proc : process(icmp_ln96_fu_496_p2, and_ln100_fu_514_p2, grp_fu_334_p2, grp_fu_360_p2)
    begin
                ap_condition_167 <= ((icmp_ln96_fu_496_p2 = ap_const_lv1_0) and (grp_fu_334_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln100_fu_514_p2) and (grp_fu_360_p2 = ap_const_lv1_1));
    end process;


    ap_condition_172_assign_proc : process(icmp_ln96_fu_496_p2, and_ln100_fu_514_p2, grp_fu_334_p2, grp_fu_360_p2)
    begin
                ap_condition_172 <= ((icmp_ln96_fu_496_p2 = ap_const_lv1_0) and (grp_fu_360_p2 = ap_const_lv1_0) and (grp_fu_334_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln100_fu_514_p2));
    end process;


    ap_condition_195_assign_proc : process(icmp_ln96_reg_863, grp_fu_334_p2, and_ln65_fu_633_p2)
    begin
                ap_condition_195 <= ((ap_const_lv1_0 = and_ln65_fu_633_p2) and (icmp_ln96_reg_863 = ap_const_lv1_0) and (grp_fu_334_p2 = ap_const_lv1_1));
    end process;


    ap_condition_199_assign_proc : process(icmp_ln96_reg_863, grp_fu_334_p2, grp_fu_360_p2, and_ln65_fu_633_p2)
    begin
                ap_condition_199 <= ((ap_const_lv1_0 = and_ln65_fu_633_p2) and (grp_fu_334_p2 = ap_const_lv1_0) and (icmp_ln96_reg_863 = ap_const_lv1_0) and (grp_fu_360_p2 = ap_const_lv1_1));
    end process;


    ap_condition_202_assign_proc : process(icmp_ln96_reg_863, grp_fu_334_p2, grp_fu_360_p2, and_ln65_fu_633_p2)
    begin
                ap_condition_202 <= ((ap_const_lv1_0 = and_ln65_fu_633_p2) and (grp_fu_360_p2 = ap_const_lv1_0) and (grp_fu_334_p2 = ap_const_lv1_0) and (icmp_ln96_reg_863 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln161_fu_378_p2)
    begin
        if ((((icmp_ln161_fu_378_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_idx_3_i2_phi_fu_264_p10_assign_proc : process(select_ln850_reg_813, icmp_ln96_reg_863, ap_CS_fsm_state4, zext_ln70_1_fu_708_p1, and_ln65_fu_633_p2, zext_ln74_fu_695_p1, zext_ln78_fu_690_p1, ap_condition_195, ap_condition_199, ap_condition_202)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
            if (((icmp_ln96_reg_863 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln65_fu_633_p2))) then 
                ap_phi_mux_idx_3_i2_phi_fu_264_p10 <= select_ln850_reg_813;
            elsif ((icmp_ln96_reg_863 = ap_const_lv1_1)) then 
                ap_phi_mux_idx_3_i2_phi_fu_264_p10 <= ap_const_lv16_0;
            elsif ((ap_const_boolean_1 = ap_condition_202)) then 
                ap_phi_mux_idx_3_i2_phi_fu_264_p10 <= zext_ln78_fu_690_p1;
            elsif ((ap_const_boolean_1 = ap_condition_199)) then 
                ap_phi_mux_idx_3_i2_phi_fu_264_p10 <= zext_ln74_fu_695_p1;
            elsif ((ap_const_boolean_1 = ap_condition_195)) then 
                ap_phi_mux_idx_3_i2_phi_fu_264_p10 <= zext_ln70_1_fu_708_p1;
            else 
                ap_phi_mux_idx_3_i2_phi_fu_264_p10 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_idx_3_i2_phi_fu_264_p10 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_idx_3_i_phi_fu_226_p10_assign_proc : process(ap_CS_fsm_state3, select_ln850_reg_813, icmp_ln96_fu_496_p2, zext_ln105_1_fu_589_p1, and_ln100_fu_514_p2, zext_ln109_fu_576_p1, zext_ln113_fu_571_p1, ap_condition_159, ap_condition_167, ap_condition_172)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if (((icmp_ln96_fu_496_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln100_fu_514_p2))) then 
                ap_phi_mux_idx_3_i_phi_fu_226_p10 <= select_ln850_reg_813;
            elsif ((icmp_ln96_fu_496_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_idx_3_i_phi_fu_226_p10 <= ap_const_lv16_0;
            elsif ((ap_const_boolean_1 = ap_condition_172)) then 
                ap_phi_mux_idx_3_i_phi_fu_226_p10 <= zext_ln113_fu_571_p1;
            elsif ((ap_const_boolean_1 = ap_condition_167)) then 
                ap_phi_mux_idx_3_i_phi_fu_226_p10 <= zext_ln109_fu_576_p1;
            elsif ((ap_const_boolean_1 = ap_condition_159)) then 
                ap_phi_mux_idx_3_i_phi_fu_226_p10 <= zext_ln105_1_fu_589_p1;
            else 
                ap_phi_mux_idx_3_i_phi_fu_226_p10 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_idx_3_i_phi_fu_226_p10 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln161_fu_378_p2)
    begin
        if (((icmp_ln161_fu_378_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ary_i_V_blk_n_assign_proc : process(ary_i_V_empty_n, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ary_i_V_blk_n <= ary_i_V_empty_n;
        else 
            ary_i_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ary_i_V_read_assign_proc : process(ary_r_V_empty_n, ary_i_V_empty_n, ap_CS_fsm_state3)
    begin
        if ((not(((ary_i_V_empty_n = ap_const_logic_0) or (ary_r_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ary_i_V_read <= ap_const_logic_1;
        else 
            ary_i_V_read <= ap_const_logic_0;
        end if; 
    end process;

    ary_i_s_V_addr_1_gep_fu_176_p3 <= zext_ln189_reg_843(17 - 1 downto 0);
    ary_i_s_V_addr_gep_fu_192_p3 <= zext_ln189_reg_843(17 - 1 downto 0);

    ary_i_s_V_address0_assign_proc : process(zext_ln189_reg_843, icmp_ln193_reg_924, icmp_ln198_reg_928, ap_CS_fsm_state7, ary_i_s_V_addr_1_gep_fu_176_p3, ary_i_s_V_addr_gep_fu_192_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
            if ((icmp_ln193_reg_924 = ap_const_lv1_1)) then 
                ary_i_s_V_address0 <= ary_i_s_V_addr_gep_fu_192_p3;
            elsif (((icmp_ln193_reg_924 = ap_const_lv1_0) and (icmp_ln198_reg_928 = ap_const_lv1_1))) then 
                ary_i_s_V_address0 <= ary_i_s_V_addr_1_gep_fu_176_p3;
            elsif (((icmp_ln198_reg_928 = ap_const_lv1_0) and (icmp_ln193_reg_924 = ap_const_lv1_0))) then 
                ary_i_s_V_address0 <= zext_ln189_reg_843(17 - 1 downto 0);
            else 
                ary_i_s_V_address0 <= "XXXXXXXXXXXXXXXXX";
            end if;
        else 
            ary_i_s_V_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ary_i_s_V_ce0_assign_proc : process(icmp_ln193_reg_924, icmp_ln198_reg_928, ap_CS_fsm_state7)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln193_reg_924 = ap_const_lv1_1)) or ((icmp_ln193_reg_924 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln198_reg_928 = ap_const_lv1_1)) or ((icmp_ln198_reg_928 = ap_const_lv1_0) and (icmp_ln193_reg_924 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            ary_i_s_V_ce0 <= ap_const_logic_1;
        else 
            ary_i_s_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ary_i_s_V_d0_assign_proc : process(imag_V_reg_918, icmp_ln193_reg_924, icmp_ln198_reg_928, ap_CS_fsm_state7, grp_fu_372_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln193_reg_924 = ap_const_lv1_1)) or ((icmp_ln193_reg_924 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln198_reg_928 = ap_const_lv1_1)))) then 
            ary_i_s_V_d0 <= grp_fu_372_p2;
        elsif (((icmp_ln198_reg_928 = ap_const_lv1_0) and (icmp_ln193_reg_924 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ary_i_s_V_d0 <= imag_V_reg_918;
        else 
            ary_i_s_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ary_i_s_V_we0_assign_proc : process(icmp_ln193_reg_924, icmp_ln198_reg_928, ap_CS_fsm_state7)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln193_reg_924 = ap_const_lv1_1)) or ((icmp_ln193_reg_924 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln198_reg_928 = ap_const_lv1_1)) or ((icmp_ln198_reg_928 = ap_const_lv1_0) and (icmp_ln193_reg_924 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            ary_i_s_V_we0 <= ap_const_logic_1;
        else 
            ary_i_s_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ary_r_V_blk_n_assign_proc : process(ary_r_V_empty_n, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ary_r_V_blk_n <= ary_r_V_empty_n;
        else 
            ary_r_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ary_r_V_read_assign_proc : process(ary_r_V_empty_n, ary_i_V_empty_n, ap_CS_fsm_state3)
    begin
        if ((not(((ary_i_V_empty_n = ap_const_logic_0) or (ary_r_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ary_r_V_read <= ap_const_logic_1;
        else 
            ary_r_V_read <= ap_const_logic_0;
        end if; 
    end process;

    ary_r_s_V_addr_1_gep_fu_168_p3 <= zext_ln189_reg_843(17 - 1 downto 0);
    ary_r_s_V_addr_gep_fu_184_p3 <= zext_ln189_reg_843(17 - 1 downto 0);

    ary_r_s_V_address0_assign_proc : process(zext_ln189_reg_843, icmp_ln193_reg_924, icmp_ln198_reg_928, ap_CS_fsm_state7, ary_r_s_V_addr_1_gep_fu_168_p3, ary_r_s_V_addr_gep_fu_184_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
            if ((icmp_ln193_reg_924 = ap_const_lv1_1)) then 
                ary_r_s_V_address0 <= ary_r_s_V_addr_gep_fu_184_p3;
            elsif (((icmp_ln193_reg_924 = ap_const_lv1_0) and (icmp_ln198_reg_928 = ap_const_lv1_1))) then 
                ary_r_s_V_address0 <= ary_r_s_V_addr_1_gep_fu_168_p3;
            elsif (((icmp_ln198_reg_928 = ap_const_lv1_0) and (icmp_ln193_reg_924 = ap_const_lv1_0))) then 
                ary_r_s_V_address0 <= zext_ln189_reg_843(17 - 1 downto 0);
            else 
                ary_r_s_V_address0 <= "XXXXXXXXXXXXXXXXX";
            end if;
        else 
            ary_r_s_V_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ary_r_s_V_ce0_assign_proc : process(icmp_ln193_reg_924, icmp_ln198_reg_928, ap_CS_fsm_state7)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln193_reg_924 = ap_const_lv1_1)) or ((icmp_ln193_reg_924 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln198_reg_928 = ap_const_lv1_1)) or ((icmp_ln198_reg_928 = ap_const_lv1_0) and (icmp_ln193_reg_924 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            ary_r_s_V_ce0 <= ap_const_logic_1;
        else 
            ary_r_s_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ary_r_s_V_d0_assign_proc : process(real_V_reg_912, icmp_ln193_reg_924, icmp_ln198_reg_928, ap_CS_fsm_state7, grp_fu_366_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln193_reg_924 = ap_const_lv1_1)) or ((icmp_ln193_reg_924 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln198_reg_928 = ap_const_lv1_1)))) then 
            ary_r_s_V_d0 <= grp_fu_366_p2;
        elsif (((icmp_ln198_reg_928 = ap_const_lv1_0) and (icmp_ln193_reg_924 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ary_r_s_V_d0 <= real_V_reg_912;
        else 
            ary_r_s_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ary_r_s_V_we0_assign_proc : process(icmp_ln193_reg_924, icmp_ln198_reg_928, ap_CS_fsm_state7)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln193_reg_924 = ap_const_lv1_1)) or ((icmp_ln193_reg_924 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln198_reg_928 = ap_const_lv1_1)) or ((icmp_ln198_reg_928 = ap_const_lv1_0) and (icmp_ln193_reg_924 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            ary_r_s_V_we0 <= ap_const_logic_1;
        else 
            ary_r_s_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cos_table_address0 <= sext_ln1265_fu_594_p1(7 - 1 downto 0);

    cos_table_ce0_assign_proc : process(ary_r_V_empty_n, ary_i_V_empty_n, ap_CS_fsm_state3)
    begin
        if ((not(((ary_i_V_empty_n = ap_const_logic_0) or (ary_r_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            cos_table_ce0 <= ap_const_logic_1;
        else 
            cos_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_299_p2 <= "1" when (signed(select_ln850_reg_813) < signed(ap_const_lv16_41)) else "0";
    grp_fu_304_p4 <= select_ln850_reg_813(15 downto 6);
    grp_fu_313_p2 <= "1" when (signed(grp_fu_304_p4) > signed(ap_const_lv10_0)) else "0";
    grp_fu_319_p4 <= select_ln850_reg_813(15 downto 7);
    grp_fu_328_p2 <= "1" when (signed(grp_fu_319_p4) < signed(ap_const_lv9_1)) else "0";
    grp_fu_334_p2 <= (grp_fu_328_p2 and grp_fu_313_p2);
    grp_fu_340_p4 <= select_ln850_reg_813(15 downto 7);
    grp_fu_349_p2 <= "1" when (signed(grp_fu_340_p4) > signed(ap_const_lv9_0)) else "0";
    grp_fu_355_p2 <= "1" when (signed(select_ln850_reg_813) < signed(ap_const_lv16_C0)) else "0";
    grp_fu_360_p2 <= (grp_fu_355_p2 and grp_fu_349_p2);
    grp_fu_366_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(real_V_reg_912));
    grp_fu_372_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(imag_V_reg_918));
    icmp_ln1494_fu_418_p2 <= "1" when (signed(value_V_3_fu_408_p4) > signed(ap_const_lv32_1000000)) else "0";
    icmp_ln161_fu_378_p2 <= "1" when (m_0_reg_211 = ap_const_lv17_186A0) else "0";
    icmp_ln193_fu_790_p2 <= "1" when (select_ln850_reg_813 = ap_const_lv16_0) else "0";
    icmp_ln198_fu_795_p2 <= "1" when (select_ln850_reg_813 = ap_const_lv16_40) else "0";
    icmp_ln851_fu_460_p2 <= "1" when (trunc_ln851_fu_456_p1 = ap_const_lv16_0) else "0";
    icmp_ln96_fu_496_p2 <= "1" when (select_ln850_reg_813 = ap_const_lv16_100) else "0";
    idx_1_fu_488_p1 <= select_ln850_fu_480_p3(6 - 1 downto 0);
    idx_2_fu_565_p2 <= std_logic_vector(signed(ap_const_lv7_40) - signed(select_ln113_fu_557_p3));
    idx_3_fu_702_p2 <= std_logic_vector(signed(ap_const_lv7_40) - signed(zext_ln70_fu_699_p1));
    idx_4_fu_684_p2 <= std_logic_vector(signed(ap_const_lv7_40) - signed(select_ln78_fu_676_p3));
    idx_fu_583_p2 <= std_logic_vector(signed(ap_const_lv7_40) - signed(zext_ln105_fu_580_p1));
    lhs_V_fu_390_p3 <= (p_Val2_s_reg_200 & ap_const_lv8_0);
    m_fu_384_p2 <= std_logic_vector(unsigned(m_0_reg_211) + unsigned(ap_const_lv17_1));
    mul_ln1192_fu_742_p0 <= sext_ln1118_2_fu_732_p1(32 - 1 downto 0);
    mul_ln1192_fu_742_p1 <= sext_ln1118_3_fu_735_p1(9 - 1 downto 0);
    mul_ln1192_fu_742_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_fu_742_p0) * signed(mul_ln1192_fu_742_p1))), 40));
    mul_ln1193_fu_769_p0 <= sext_ln1118_reg_881(32 - 1 downto 0);
    mul_ln1193_fu_769_p1 <= sext_ln1118_3_fu_735_p1(9 - 1 downto 0);
    mul_ln1193_fu_769_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1193_fu_769_p0) * signed(mul_ln1193_fu_769_p1))), 40));
    mul_ln700_1_fu_764_p0 <= sext_ln1118_2_fu_732_p1(32 - 1 downto 0);
    mul_ln700_1_fu_764_p1 <= sext_ln1118_1_reg_887(9 - 1 downto 0);
    mul_ln700_1_fu_764_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_1_fu_764_p0) * signed(mul_ln700_1_fu_764_p1))), 40));
    mul_ln700_fu_738_p0 <= sext_ln1118_reg_881(32 - 1 downto 0);
    mul_ln700_fu_738_p1 <= sext_ln1118_1_reg_887(9 - 1 downto 0);
    mul_ln700_fu_738_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_fu_738_p0) * signed(mul_ln700_fu_738_p1))), 40));
    p_Result_s_fu_448_p3 <= value_V_4_fu_430_p3(31 downto 31);
    p_Val2_4_fu_605_p3 <= 
        sub_ln703_4_fu_599_p2 when (sign_3_i_reg_239(0) = '1') else 
        cos_table_q0;
    p_Val2_6_fu_724_p3 <= 
        sub_ln703_5_fu_718_p2 when (sign_3_i3_reg_277(0) = '1') else 
        sin_table_q0;
    ret_V_1_fu_466_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_fu_438_p4));
    ret_V_4_fu_748_p2 <= std_logic_vector(unsigned(mul_ln700_fu_738_p2) + unsigned(mul_ln1192_fu_742_p2));
    ret_V_5_fu_774_p2 <= std_logic_vector(unsigned(mul_ln700_1_fu_764_p2) - unsigned(mul_ln1193_fu_769_p2));
    ret_V_fu_438_p4 <= value_V_4_fu_430_p3(31 downto 16);
    select_ln113_fu_557_p3 <= 
        sub_ln113_1_fu_544_p2 when (tmp_5_fu_520_p3(0) = '1') else 
        tmp_3_fu_550_p3;
    select_ln78_fu_676_p3 <= 
        sub_ln78_1_fu_663_p2 when (tmp_12_fu_639_p3(0) = '1') else 
        tmp_7_fu_669_p3;
    select_ln850_fu_480_p3 <= 
        select_ln851_fu_472_p3 when (p_Result_s_fu_448_p3(0) = '1') else 
        ret_V_fu_438_p4;
    select_ln851_fu_472_p3 <= 
        ret_V_fu_438_p4 when (icmp_ln851_fu_460_p2(0) = '1') else 
        ret_V_1_fu_466_p2;
        sext_ln1118_1_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_fu_605_p3),40));

        sext_ln1118_2_fu_732_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(value_i_V_reg_858),40));

        sext_ln1118_3_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_6_reg_907),40));

        sext_ln1118_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(value_r_V_reg_853),40));

        sext_ln1265_1_fu_713_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_idx_3_i2_phi_fu_264_p10),64));

        sext_ln1265_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_idx_3_i_phi_fu_226_p10),64));

    sin_table_address0 <= sext_ln1265_1_fu_713_p1(7 - 1 downto 0);

    sin_table_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            sin_table_ce0 <= ap_const_logic_1;
        else 
            sin_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln113_1_fu_544_p2 <= std_logic_vector(unsigned(ap_const_lv7_0) - unsigned(tmp_6_fu_536_p3));
    sub_ln113_fu_530_p2 <= std_logic_vector(unsigned(ap_const_lv6_0) - unsigned(trunc_ln113_fu_527_p1));
    sub_ln703_4_fu_599_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(cos_table_q0));
    sub_ln703_5_fu_718_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(sin_table_q0));
    sub_ln78_1_fu_663_p2 <= std_logic_vector(unsigned(ap_const_lv7_0) - unsigned(tmp_13_fu_655_p3));
    sub_ln78_fu_649_p2 <= std_logic_vector(unsigned(ap_const_lv6_0) - unsigned(trunc_ln78_fu_646_p1));
    tmp_12_fu_639_p3 <= select_ln850_reg_813(15 downto 15);
    tmp_13_fu_655_p3 <= (ap_const_lv1_0 & sub_ln78_fu_649_p2);
    tmp_3_fu_550_p3 <= (ap_const_lv1_0 & idx_1_reg_833);
    tmp_5_fu_520_p3 <= select_ln850_reg_813(15 downto 15);
    tmp_6_fu_536_p3 <= (ap_const_lv1_0 & sub_ln113_fu_530_p2);
    tmp_7_fu_669_p3 <= (ap_const_lv1_0 & idx_1_reg_833);
    tmp_8_fu_620_p3 <= select_ln850_reg_813(15 downto 15);
    tmp_fu_501_p3 <= select_ln850_reg_813(15 downto 15);
    trunc_ln113_fu_527_p1 <= select_ln850_reg_813(6 - 1 downto 0);
    trunc_ln78_fu_646_p1 <= select_ln850_reg_813(6 - 1 downto 0);
    trunc_ln851_fu_456_p1 <= value_V_4_fu_430_p3(16 - 1 downto 0);
    value_V_3_fu_408_p4 <= add_ln1192_fu_402_p2(39 downto 8);
    value_V_4_fu_430_p3 <= 
        value_V_fu_424_p2 when (icmp_ln1494_fu_418_p2(0) = '1') else 
        value_V_3_fu_408_p4;
    value_V_fu_424_p2 <= std_logic_vector(signed(ap_const_lv32_FF000000) + signed(value_V_3_fu_408_p4));
    xor_ln100_fu_508_p2 <= (tmp_fu_501_p3 xor ap_const_lv1_1);
    xor_ln65_fu_627_p2 <= (tmp_8_fu_620_p3 xor ap_const_lv1_1);
    zext_ln105_1_fu_589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_fu_583_p2),16));
    zext_ln105_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_1_reg_833),7));
    zext_ln109_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_1_reg_833),16));
    zext_ln113_fu_571_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_2_fu_565_p2),16));
    zext_ln189_fu_492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_0_reg_211),64));
    zext_ln70_1_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_3_fu_702_p2),16));
    zext_ln70_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_1_reg_833),7));
    zext_ln728_fu_398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_fu_390_p3),41));
    zext_ln74_fu_695_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_1_reg_833),16));
    zext_ln78_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_4_fu_684_p2),16));
end behav;
