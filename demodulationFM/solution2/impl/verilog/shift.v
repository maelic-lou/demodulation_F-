// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module shift (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ary_r_V_dout,
        ary_r_V_empty_n,
        ary_r_V_read,
        ary_i_V_dout,
        ary_i_V_empty_n,
        ary_i_V_read,
        ary_r_s_V_address0,
        ary_r_s_V_ce0,
        ary_r_s_V_we0,
        ary_r_s_V_d0,
        ary_i_s_V_address0,
        ary_i_s_V_ce0,
        ary_i_s_V_we0,
        ary_i_s_V_d0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] ary_r_V_dout;
input   ary_r_V_empty_n;
output   ary_r_V_read;
input  [31:0] ary_i_V_dout;
input   ary_i_V_empty_n;
output   ary_i_V_read;
output  [16:0] ary_r_s_V_address0;
output   ary_r_s_V_ce0;
output   ary_r_s_V_we0;
output  [31:0] ary_r_s_V_d0;
output  [16:0] ary_i_s_V_address0;
output   ary_i_s_V_ce0;
output   ary_i_s_V_we0;
output  [31:0] ary_i_s_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ary_r_V_read;
reg ary_i_V_read;
reg[16:0] ary_r_s_V_address0;
reg ary_r_s_V_ce0;
reg ary_r_s_V_we0;
reg[31:0] ary_r_s_V_d0;
reg[16:0] ary_i_s_V_address0;
reg ary_i_s_V_ce0;
reg ary_i_s_V_we0;
reg[31:0] ary_i_s_V_d0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [6:0] cos_table_address0;
reg    cos_table_ce0;
wire   [8:0] cos_table_q0;
wire   [6:0] sin_table_address0;
reg    sin_table_ce0;
wire   [8:0] sin_table_q0;
reg    ary_r_V_blk_n;
wire    ap_CS_fsm_state3;
reg    ary_i_V_blk_n;
wire   [16:0] m_fu_384_p2;
reg   [16:0] m_reg_803;
wire    ap_CS_fsm_state2;
wire   [31:0] value_V_4_fu_430_p3;
reg   [31:0] value_V_4_reg_808;
wire   [0:0] icmp_ln161_fu_378_p2;
wire   [15:0] select_ln850_fu_480_p3;
reg   [15:0] select_ln850_reg_813;
wire   [5:0] idx_1_fu_488_p1;
reg   [5:0] idx_1_reg_833;
wire   [63:0] zext_ln189_fu_492_p1;
reg   [63:0] zext_ln189_reg_843;
reg    ap_block_state3;
reg   [31:0] value_r_V_reg_853;
reg   [31:0] value_i_V_reg_858;
wire   [0:0] icmp_ln96_fu_496_p2;
reg   [0:0] icmp_ln96_reg_863;
wire  signed [39:0] sext_ln1118_fu_613_p1;
reg  signed [39:0] sext_ln1118_reg_881;
wire    ap_CS_fsm_state4;
wire  signed [39:0] sext_ln1118_1_fu_616_p1;
reg  signed [39:0] sext_ln1118_1_reg_887;
wire   [8:0] p_Val2_6_fu_724_p3;
reg   [8:0] p_Val2_6_reg_907;
wire    ap_CS_fsm_state5;
reg   [31:0] real_V_reg_912;
wire    ap_CS_fsm_state6;
reg   [31:0] imag_V_reg_918;
wire   [0:0] icmp_ln193_fu_790_p2;
reg   [0:0] icmp_ln193_reg_924;
wire   [0:0] icmp_ln198_fu_795_p2;
reg   [0:0] icmp_ln198_reg_928;
reg   [31:0] p_Val2_s_reg_200;
wire    ap_CS_fsm_state7;
reg   [16:0] m_0_reg_211;
wire   [15:0] zext_ln105_1_fu_589_p1;
reg   [15:0] ap_phi_mux_idx_3_i_phi_fu_226_p10;
wire   [0:0] and_ln100_fu_514_p2;
wire   [0:0] grp_fu_334_p2;
wire   [15:0] zext_ln109_fu_576_p1;
wire   [0:0] grp_fu_360_p2;
wire   [15:0] zext_ln113_fu_571_p1;
reg   [0:0] sign_3_i_reg_239;
wire   [15:0] zext_ln70_1_fu_708_p1;
reg   [15:0] ap_phi_mux_idx_3_i2_phi_fu_264_p10;
wire   [0:0] and_ln65_fu_633_p2;
wire   [15:0] zext_ln74_fu_695_p1;
wire   [15:0] zext_ln78_fu_690_p1;
reg   [0:0] sign_3_i3_reg_277;
wire  signed [63:0] sext_ln1265_fu_594_p1;
wire  signed [63:0] sext_ln1265_1_fu_713_p1;
wire   [16:0] ary_r_s_V_addr_1_gep_fu_168_p3;
wire   [16:0] ary_i_s_V_addr_1_gep_fu_176_p3;
wire   [16:0] ary_r_s_V_addr_gep_fu_184_p3;
wire   [16:0] ary_i_s_V_addr_gep_fu_192_p3;
wire   [31:0] grp_fu_366_p2;
wire   [31:0] grp_fu_372_p2;
wire   [9:0] grp_fu_304_p4;
wire   [8:0] grp_fu_319_p4;
wire   [0:0] grp_fu_313_p2;
wire   [0:0] grp_fu_328_p2;
wire   [8:0] grp_fu_340_p4;
wire   [0:0] grp_fu_349_p2;
wire   [0:0] grp_fu_355_p2;
wire   [39:0] lhs_V_fu_390_p3;
wire   [40:0] zext_ln728_fu_398_p1;
wire   [40:0] add_ln1192_fu_402_p2;
wire   [31:0] value_V_3_fu_408_p4;
wire   [0:0] icmp_ln1494_fu_418_p2;
wire   [31:0] value_V_fu_424_p2;
wire   [15:0] trunc_ln851_fu_456_p1;
wire   [15:0] ret_V_fu_438_p4;
wire   [0:0] icmp_ln851_fu_460_p2;
wire   [15:0] ret_V_1_fu_466_p2;
wire   [0:0] p_Result_s_fu_448_p3;
wire   [15:0] select_ln851_fu_472_p3;
wire   [0:0] tmp_fu_501_p3;
wire   [0:0] grp_fu_299_p2;
wire   [0:0] xor_ln100_fu_508_p2;
wire   [5:0] trunc_ln113_fu_527_p1;
wire   [5:0] sub_ln113_fu_530_p2;
wire   [6:0] tmp_6_fu_536_p3;
wire   [0:0] tmp_5_fu_520_p3;
wire   [6:0] sub_ln113_1_fu_544_p2;
wire   [6:0] tmp_3_fu_550_p3;
wire   [6:0] select_ln113_fu_557_p3;
wire   [6:0] idx_2_fu_565_p2;
wire   [6:0] zext_ln105_fu_580_p1;
wire   [6:0] idx_fu_583_p2;
wire   [8:0] sub_ln703_4_fu_599_p2;
wire   [8:0] p_Val2_4_fu_605_p3;
wire   [0:0] tmp_8_fu_620_p3;
wire   [0:0] xor_ln65_fu_627_p2;
wire   [5:0] trunc_ln78_fu_646_p1;
wire   [5:0] sub_ln78_fu_649_p2;
wire   [6:0] tmp_13_fu_655_p3;
wire   [0:0] tmp_12_fu_639_p3;
wire   [6:0] sub_ln78_1_fu_663_p2;
wire   [6:0] tmp_7_fu_669_p3;
wire   [6:0] select_ln78_fu_676_p3;
wire   [6:0] idx_4_fu_684_p2;
wire   [6:0] zext_ln70_fu_699_p1;
wire   [6:0] idx_3_fu_702_p2;
wire   [8:0] sub_ln703_5_fu_718_p2;
wire  signed [31:0] mul_ln700_fu_738_p0;
wire  signed [8:0] mul_ln700_fu_738_p1;
wire  signed [31:0] mul_ln1192_fu_742_p0;
wire  signed [39:0] sext_ln1118_2_fu_732_p1;
wire  signed [8:0] mul_ln1192_fu_742_p1;
wire  signed [39:0] sext_ln1118_3_fu_735_p1;
wire   [39:0] mul_ln700_fu_738_p2;
wire   [39:0] mul_ln1192_fu_742_p2;
wire   [39:0] ret_V_4_fu_748_p2;
wire  signed [31:0] mul_ln700_1_fu_764_p0;
wire  signed [8:0] mul_ln700_1_fu_764_p1;
wire  signed [31:0] mul_ln1193_fu_769_p0;
wire  signed [8:0] mul_ln1193_fu_769_p1;
wire   [39:0] mul_ln700_1_fu_764_p2;
wire   [39:0] mul_ln1193_fu_769_p2;
wire   [39:0] ret_V_5_fu_774_p2;
reg   [6:0] ap_NS_fsm;
reg    ap_condition_195;
reg    ap_condition_199;
reg    ap_condition_202;
reg    ap_condition_159;
reg    ap_condition_167;
reg    ap_condition_172;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
end

shift_cos_table #(
    .DataWidth( 9 ),
    .AddressRange( 65 ),
    .AddressWidth( 7 ))
cos_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cos_table_address0),
    .ce0(cos_table_ce0),
    .q0(cos_table_q0)
);

shift_sin_table #(
    .DataWidth( 9 ),
    .AddressRange( 65 ),
    .AddressWidth( 7 ))
sin_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sin_table_address0),
    .ce0(sin_table_ce0),
    .q0(sin_table_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        m_0_reg_211 <= m_reg_803;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        m_0_reg_211 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_Val2_s_reg_200 <= value_V_4_reg_808;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Val2_s_reg_200 <= 32'd4293772758;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln65_fu_633_p2) & (grp_fu_360_p2 == 1'd0) & (grp_fu_334_p2 == 1'd0) & (icmp_ln96_reg_863 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'd0 == and_ln65_fu_633_p2) & (grp_fu_334_p2 == 1'd0) & (icmp_ln96_reg_863 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (grp_fu_360_p2 == 1'd1)))) begin
        sign_3_i3_reg_277 <= 1'd1;
    end else if ((((1'b1 == ap_CS_fsm_state4) & (icmp_ln96_reg_863 == 1'd1)) | ((icmp_ln96_reg_863 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln65_fu_633_p2)) | ((1'd0 == and_ln65_fu_633_p2) & (icmp_ln96_reg_863 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (grp_fu_334_p2 == 1'd1)))) begin
        sign_3_i3_reg_277 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ary_i_V_empty_n == 1'b0) | (ary_r_V_empty_n == 1'b0)) & (icmp_ln96_fu_496_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | (~((ary_i_V_empty_n == 1'b0) | (ary_r_V_empty_n == 1'b0)) & (icmp_ln96_fu_496_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln100_fu_514_p2)) | (~((ary_i_V_empty_n == 1'b0) | (ary_r_V_empty_n == 1'b0)) & (icmp_ln96_fu_496_p2 == 1'd0) & (grp_fu_360_p2 == 1'd0) & (grp_fu_334_p2 == 1'd0) & (1'd0 == and_ln100_fu_514_p2) & (1'b1 == ap_CS_fsm_state3)))) begin
        sign_3_i_reg_239 <= 1'd0;
    end else if (((~((ary_i_V_empty_n == 1'b0) | (ary_r_V_empty_n == 1'b0)) & (icmp_ln96_fu_496_p2 == 1'd0) & (grp_fu_334_p2 == 1'd0) & (1'd0 == and_ln100_fu_514_p2) & (1'b1 == ap_CS_fsm_state3) & (grp_fu_360_p2 == 1'd1)) | (~((ary_i_V_empty_n == 1'b0) | (ary_r_V_empty_n == 1'b0)) & (icmp_ln96_fu_496_p2 == 1'd0) & (1'd0 == and_ln100_fu_514_p2) & (1'b1 == ap_CS_fsm_state3) & (grp_fu_334_p2 == 1'd1)))) begin
        sign_3_i_reg_239 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln193_reg_924 <= icmp_ln193_fu_790_p2;
        imag_V_reg_918 <= {{ret_V_5_fu_774_p2[39:8]}};
        real_V_reg_912 <= {{ret_V_4_fu_748_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln193_fu_790_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        icmp_ln198_reg_928 <= icmp_ln198_fu_795_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ary_i_V_empty_n == 1'b0) | (ary_r_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln96_reg_863 <= icmp_ln96_fu_496_p2;
        value_i_V_reg_858 <= ary_i_V_dout;
        value_r_V_reg_853 <= ary_r_V_dout;
        zext_ln189_reg_843[16 : 0] <= zext_ln189_fu_492_p1[16 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln161_fu_378_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        idx_1_reg_833 <= idx_1_fu_488_p1;
        select_ln850_reg_813 <= select_ln850_fu_480_p3;
        value_V_4_reg_808 <= value_V_4_fu_430_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        m_reg_803 <= m_fu_384_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_Val2_6_reg_907 <= p_Val2_6_fu_724_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sext_ln1118_1_reg_887 <= sext_ln1118_1_fu_616_p1;
        sext_ln1118_reg_881 <= sext_ln1118_fu_613_p1;
    end
end

always @ (*) begin
    if ((((icmp_ln161_fu_378_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        if (((icmp_ln96_reg_863 == 1'd0) & (1'd1 == and_ln65_fu_633_p2))) begin
            ap_phi_mux_idx_3_i2_phi_fu_264_p10 = select_ln850_reg_813;
        end else if ((icmp_ln96_reg_863 == 1'd1)) begin
            ap_phi_mux_idx_3_i2_phi_fu_264_p10 = 16'd0;
        end else if ((1'b1 == ap_condition_202)) begin
            ap_phi_mux_idx_3_i2_phi_fu_264_p10 = zext_ln78_fu_690_p1;
        end else if ((1'b1 == ap_condition_199)) begin
            ap_phi_mux_idx_3_i2_phi_fu_264_p10 = zext_ln74_fu_695_p1;
        end else if ((1'b1 == ap_condition_195)) begin
            ap_phi_mux_idx_3_i2_phi_fu_264_p10 = zext_ln70_1_fu_708_p1;
        end else begin
            ap_phi_mux_idx_3_i2_phi_fu_264_p10 = 'bx;
        end
    end else begin
        ap_phi_mux_idx_3_i2_phi_fu_264_p10 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if (((icmp_ln96_fu_496_p2 == 1'd0) & (1'd1 == and_ln100_fu_514_p2))) begin
            ap_phi_mux_idx_3_i_phi_fu_226_p10 = select_ln850_reg_813;
        end else if ((icmp_ln96_fu_496_p2 == 1'd1)) begin
            ap_phi_mux_idx_3_i_phi_fu_226_p10 = 16'd0;
        end else if ((1'b1 == ap_condition_172)) begin
            ap_phi_mux_idx_3_i_phi_fu_226_p10 = zext_ln113_fu_571_p1;
        end else if ((1'b1 == ap_condition_167)) begin
            ap_phi_mux_idx_3_i_phi_fu_226_p10 = zext_ln109_fu_576_p1;
        end else if ((1'b1 == ap_condition_159)) begin
            ap_phi_mux_idx_3_i_phi_fu_226_p10 = zext_ln105_1_fu_589_p1;
        end else begin
            ap_phi_mux_idx_3_i_phi_fu_226_p10 = 'bx;
        end
    end else begin
        ap_phi_mux_idx_3_i_phi_fu_226_p10 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln161_fu_378_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ary_i_V_blk_n = ary_i_V_empty_n;
    end else begin
        ary_i_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ary_i_V_empty_n == 1'b0) | (ary_r_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        ary_i_V_read = 1'b1;
    end else begin
        ary_i_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        if ((icmp_ln193_reg_924 == 1'd1)) begin
            ary_i_s_V_address0 = ary_i_s_V_addr_gep_fu_192_p3;
        end else if (((icmp_ln193_reg_924 == 1'd0) & (icmp_ln198_reg_928 == 1'd1))) begin
            ary_i_s_V_address0 = ary_i_s_V_addr_1_gep_fu_176_p3;
        end else if (((icmp_ln198_reg_928 == 1'd0) & (icmp_ln193_reg_924 == 1'd0))) begin
            ary_i_s_V_address0 = zext_ln189_reg_843;
        end else begin
            ary_i_s_V_address0 = 'bx;
        end
    end else begin
        ary_i_s_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (icmp_ln193_reg_924 == 1'd1)) | ((icmp_ln193_reg_924 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln198_reg_928 == 1'd1)) | ((icmp_ln198_reg_928 == 1'd0) & (icmp_ln193_reg_924 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        ary_i_s_V_ce0 = 1'b1;
    end else begin
        ary_i_s_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (icmp_ln193_reg_924 == 1'd1)) | ((icmp_ln193_reg_924 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln198_reg_928 == 1'd1)))) begin
        ary_i_s_V_d0 = grp_fu_372_p2;
    end else if (((icmp_ln198_reg_928 == 1'd0) & (icmp_ln193_reg_924 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        ary_i_s_V_d0 = imag_V_reg_918;
    end else begin
        ary_i_s_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (icmp_ln193_reg_924 == 1'd1)) | ((icmp_ln193_reg_924 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln198_reg_928 == 1'd1)) | ((icmp_ln198_reg_928 == 1'd0) & (icmp_ln193_reg_924 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        ary_i_s_V_we0 = 1'b1;
    end else begin
        ary_i_s_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ary_r_V_blk_n = ary_r_V_empty_n;
    end else begin
        ary_r_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ary_i_V_empty_n == 1'b0) | (ary_r_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        ary_r_V_read = 1'b1;
    end else begin
        ary_r_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        if ((icmp_ln193_reg_924 == 1'd1)) begin
            ary_r_s_V_address0 = ary_r_s_V_addr_gep_fu_184_p3;
        end else if (((icmp_ln193_reg_924 == 1'd0) & (icmp_ln198_reg_928 == 1'd1))) begin
            ary_r_s_V_address0 = ary_r_s_V_addr_1_gep_fu_168_p3;
        end else if (((icmp_ln198_reg_928 == 1'd0) & (icmp_ln193_reg_924 == 1'd0))) begin
            ary_r_s_V_address0 = zext_ln189_reg_843;
        end else begin
            ary_r_s_V_address0 = 'bx;
        end
    end else begin
        ary_r_s_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (icmp_ln193_reg_924 == 1'd1)) | ((icmp_ln193_reg_924 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln198_reg_928 == 1'd1)) | ((icmp_ln198_reg_928 == 1'd0) & (icmp_ln193_reg_924 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        ary_r_s_V_ce0 = 1'b1;
    end else begin
        ary_r_s_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (icmp_ln193_reg_924 == 1'd1)) | ((icmp_ln193_reg_924 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln198_reg_928 == 1'd1)))) begin
        ary_r_s_V_d0 = grp_fu_366_p2;
    end else if (((icmp_ln198_reg_928 == 1'd0) & (icmp_ln193_reg_924 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        ary_r_s_V_d0 = real_V_reg_912;
    end else begin
        ary_r_s_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (icmp_ln193_reg_924 == 1'd1)) | ((icmp_ln193_reg_924 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln198_reg_928 == 1'd1)) | ((icmp_ln198_reg_928 == 1'd0) & (icmp_ln193_reg_924 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        ary_r_s_V_we0 = 1'b1;
    end else begin
        ary_r_s_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ary_i_V_empty_n == 1'b0) | (ary_r_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        cos_table_ce0 = 1'b1;
    end else begin
        cos_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sin_table_ce0 = 1'b1;
    end else begin
        sin_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln161_fu_378_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((ary_i_V_empty_n == 1'b0) | (ary_r_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_fu_402_p2 = (41'd305801472 + zext_ln728_fu_398_p1);

assign and_ln100_fu_514_p2 = (xor_ln100_fu_508_p2 & grp_fu_299_p2);

assign and_ln65_fu_633_p2 = (xor_ln65_fu_627_p2 & grp_fu_299_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_state3 = ((ary_i_V_empty_n == 1'b0) | (ary_r_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_159 = ((icmp_ln96_fu_496_p2 == 1'd0) & (1'd0 == and_ln100_fu_514_p2) & (grp_fu_334_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_167 = ((icmp_ln96_fu_496_p2 == 1'd0) & (grp_fu_334_p2 == 1'd0) & (1'd0 == and_ln100_fu_514_p2) & (grp_fu_360_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_172 = ((icmp_ln96_fu_496_p2 == 1'd0) & (grp_fu_360_p2 == 1'd0) & (grp_fu_334_p2 == 1'd0) & (1'd0 == and_ln100_fu_514_p2));
end

always @ (*) begin
    ap_condition_195 = ((1'd0 == and_ln65_fu_633_p2) & (icmp_ln96_reg_863 == 1'd0) & (grp_fu_334_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_199 = ((1'd0 == and_ln65_fu_633_p2) & (grp_fu_334_p2 == 1'd0) & (icmp_ln96_reg_863 == 1'd0) & (grp_fu_360_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_202 = ((1'd0 == and_ln65_fu_633_p2) & (grp_fu_360_p2 == 1'd0) & (grp_fu_334_p2 == 1'd0) & (icmp_ln96_reg_863 == 1'd0));
end

assign ary_i_s_V_addr_1_gep_fu_176_p3 = zext_ln189_reg_843;

assign ary_i_s_V_addr_gep_fu_192_p3 = zext_ln189_reg_843;

assign ary_r_s_V_addr_1_gep_fu_168_p3 = zext_ln189_reg_843;

assign ary_r_s_V_addr_gep_fu_184_p3 = zext_ln189_reg_843;

assign cos_table_address0 = sext_ln1265_fu_594_p1;

assign grp_fu_299_p2 = (($signed(select_ln850_reg_813) < $signed(16'd65)) ? 1'b1 : 1'b0);

assign grp_fu_304_p4 = {{select_ln850_reg_813[15:6]}};

assign grp_fu_313_p2 = (($signed(grp_fu_304_p4) > $signed(10'd0)) ? 1'b1 : 1'b0);

assign grp_fu_319_p4 = {{select_ln850_reg_813[15:7]}};

assign grp_fu_328_p2 = (($signed(grp_fu_319_p4) < $signed(9'd1)) ? 1'b1 : 1'b0);

assign grp_fu_334_p2 = (grp_fu_328_p2 & grp_fu_313_p2);

assign grp_fu_340_p4 = {{select_ln850_reg_813[15:7]}};

assign grp_fu_349_p2 = (($signed(grp_fu_340_p4) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign grp_fu_355_p2 = (($signed(select_ln850_reg_813) < $signed(16'd192)) ? 1'b1 : 1'b0);

assign grp_fu_360_p2 = (grp_fu_355_p2 & grp_fu_349_p2);

assign grp_fu_366_p2 = (32'd0 - real_V_reg_912);

assign grp_fu_372_p2 = (32'd0 - imag_V_reg_918);

assign icmp_ln1494_fu_418_p2 = (($signed(value_V_3_fu_408_p4) > $signed(32'd16777216)) ? 1'b1 : 1'b0);

assign icmp_ln161_fu_378_p2 = ((m_0_reg_211 == 17'd100000) ? 1'b1 : 1'b0);

assign icmp_ln193_fu_790_p2 = ((select_ln850_reg_813 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln198_fu_795_p2 = ((select_ln850_reg_813 == 16'd64) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_460_p2 = ((trunc_ln851_fu_456_p1 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_496_p2 = ((select_ln850_reg_813 == 16'd256) ? 1'b1 : 1'b0);

assign idx_1_fu_488_p1 = select_ln850_fu_480_p3[5:0];

assign idx_2_fu_565_p2 = ($signed(7'd64) - $signed(select_ln113_fu_557_p3));

assign idx_3_fu_702_p2 = ($signed(7'd64) - $signed(zext_ln70_fu_699_p1));

assign idx_4_fu_684_p2 = ($signed(7'd64) - $signed(select_ln78_fu_676_p3));

assign idx_fu_583_p2 = ($signed(7'd64) - $signed(zext_ln105_fu_580_p1));

assign lhs_V_fu_390_p3 = {{p_Val2_s_reg_200}, {8'd0}};

assign m_fu_384_p2 = (m_0_reg_211 + 17'd1);

assign mul_ln1192_fu_742_p0 = sext_ln1118_2_fu_732_p1;

assign mul_ln1192_fu_742_p1 = sext_ln1118_3_fu_735_p1;

assign mul_ln1192_fu_742_p2 = ($signed(mul_ln1192_fu_742_p0) * $signed(mul_ln1192_fu_742_p1));

assign mul_ln1193_fu_769_p0 = sext_ln1118_reg_881;

assign mul_ln1193_fu_769_p1 = sext_ln1118_3_fu_735_p1;

assign mul_ln1193_fu_769_p2 = ($signed(mul_ln1193_fu_769_p0) * $signed(mul_ln1193_fu_769_p1));

assign mul_ln700_1_fu_764_p0 = sext_ln1118_2_fu_732_p1;

assign mul_ln700_1_fu_764_p1 = sext_ln1118_1_reg_887;

assign mul_ln700_1_fu_764_p2 = ($signed(mul_ln700_1_fu_764_p0) * $signed(mul_ln700_1_fu_764_p1));

assign mul_ln700_fu_738_p0 = sext_ln1118_reg_881;

assign mul_ln700_fu_738_p1 = sext_ln1118_1_reg_887;

assign mul_ln700_fu_738_p2 = ($signed(mul_ln700_fu_738_p0) * $signed(mul_ln700_fu_738_p1));

assign p_Result_s_fu_448_p3 = value_V_4_fu_430_p3[32'd31];

assign p_Val2_4_fu_605_p3 = ((sign_3_i_reg_239[0:0] === 1'b1) ? sub_ln703_4_fu_599_p2 : cos_table_q0);

assign p_Val2_6_fu_724_p3 = ((sign_3_i3_reg_277[0:0] === 1'b1) ? sub_ln703_5_fu_718_p2 : sin_table_q0);

assign ret_V_1_fu_466_p2 = (16'd1 + ret_V_fu_438_p4);

assign ret_V_4_fu_748_p2 = (mul_ln700_fu_738_p2 + mul_ln1192_fu_742_p2);

assign ret_V_5_fu_774_p2 = (mul_ln700_1_fu_764_p2 - mul_ln1193_fu_769_p2);

assign ret_V_fu_438_p4 = {{value_V_4_fu_430_p3[31:16]}};

assign select_ln113_fu_557_p3 = ((tmp_5_fu_520_p3[0:0] === 1'b1) ? sub_ln113_1_fu_544_p2 : tmp_3_fu_550_p3);

assign select_ln78_fu_676_p3 = ((tmp_12_fu_639_p3[0:0] === 1'b1) ? sub_ln78_1_fu_663_p2 : tmp_7_fu_669_p3);

assign select_ln850_fu_480_p3 = ((p_Result_s_fu_448_p3[0:0] === 1'b1) ? select_ln851_fu_472_p3 : ret_V_fu_438_p4);

assign select_ln851_fu_472_p3 = ((icmp_ln851_fu_460_p2[0:0] === 1'b1) ? ret_V_fu_438_p4 : ret_V_1_fu_466_p2);

assign sext_ln1118_1_fu_616_p1 = $signed(p_Val2_4_fu_605_p3);

assign sext_ln1118_2_fu_732_p1 = $signed(value_i_V_reg_858);

assign sext_ln1118_3_fu_735_p1 = $signed(p_Val2_6_reg_907);

assign sext_ln1118_fu_613_p1 = $signed(value_r_V_reg_853);

assign sext_ln1265_1_fu_713_p1 = $signed(ap_phi_mux_idx_3_i2_phi_fu_264_p10);

assign sext_ln1265_fu_594_p1 = $signed(ap_phi_mux_idx_3_i_phi_fu_226_p10);

assign sin_table_address0 = sext_ln1265_1_fu_713_p1;

assign sub_ln113_1_fu_544_p2 = (7'd0 - tmp_6_fu_536_p3);

assign sub_ln113_fu_530_p2 = (6'd0 - trunc_ln113_fu_527_p1);

assign sub_ln703_4_fu_599_p2 = (9'd0 - cos_table_q0);

assign sub_ln703_5_fu_718_p2 = (9'd0 - sin_table_q0);

assign sub_ln78_1_fu_663_p2 = (7'd0 - tmp_13_fu_655_p3);

assign sub_ln78_fu_649_p2 = (6'd0 - trunc_ln78_fu_646_p1);

assign tmp_12_fu_639_p3 = select_ln850_reg_813[32'd15];

assign tmp_13_fu_655_p3 = {{1'd0}, {sub_ln78_fu_649_p2}};

assign tmp_3_fu_550_p3 = {{1'd0}, {idx_1_reg_833}};

assign tmp_5_fu_520_p3 = select_ln850_reg_813[32'd15];

assign tmp_6_fu_536_p3 = {{1'd0}, {sub_ln113_fu_530_p2}};

assign tmp_7_fu_669_p3 = {{1'd0}, {idx_1_reg_833}};

assign tmp_8_fu_620_p3 = select_ln850_reg_813[32'd15];

assign tmp_fu_501_p3 = select_ln850_reg_813[32'd15];

assign trunc_ln113_fu_527_p1 = select_ln850_reg_813[5:0];

assign trunc_ln78_fu_646_p1 = select_ln850_reg_813[5:0];

assign trunc_ln851_fu_456_p1 = value_V_4_fu_430_p3[15:0];

assign value_V_3_fu_408_p4 = {{add_ln1192_fu_402_p2[39:8]}};

assign value_V_4_fu_430_p3 = ((icmp_ln1494_fu_418_p2[0:0] === 1'b1) ? value_V_fu_424_p2 : value_V_3_fu_408_p4);

assign value_V_fu_424_p2 = ($signed(32'd4278190080) + $signed(value_V_3_fu_408_p4));

assign xor_ln100_fu_508_p2 = (tmp_fu_501_p3 ^ 1'd1);

assign xor_ln65_fu_627_p2 = (tmp_8_fu_620_p3 ^ 1'd1);

assign zext_ln105_1_fu_589_p1 = idx_fu_583_p2;

assign zext_ln105_fu_580_p1 = idx_1_reg_833;

assign zext_ln109_fu_576_p1 = idx_1_reg_833;

assign zext_ln113_fu_571_p1 = idx_2_fu_565_p2;

assign zext_ln189_fu_492_p1 = m_0_reg_211;

assign zext_ln70_1_fu_708_p1 = idx_3_fu_702_p2;

assign zext_ln70_fu_699_p1 = idx_1_reg_833;

assign zext_ln728_fu_398_p1 = lhs_V_fu_390_p3;

assign zext_ln74_fu_695_p1 = idx_1_reg_833;

assign zext_ln78_fu_690_p1 = idx_4_fu_684_p2;

always @ (posedge ap_clk) begin
    zext_ln189_reg_843[63:17] <= 47'b00000000000000000000000000000000000000000000000;
end

endmodule //shift
