

================================================================
== Vivado HLS Report for 'shift'
================================================================
* Date:           Sat Mar 28 17:54:10 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        demodulation_FM1
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k70t-fbv676-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.270 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   200001|   200001| 2.000 ms | 2.000 ms |  200001|  200001|   none  |
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+-------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +----------+---------+---------+----------+-----------+-----------+-------+----------+
        |- Loop 1  |   200000|   200000|         5|          -|          -|  40000|    no    |
        +----------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.06>
ST_1 : Operation 7 [1/1] (1.06ns)   --->   "br label %1" [demodulation_FM.cpp:126]   --->   Operation 7 'br' <Predicate = true> <Delay = 1.06>

State 2 <SV = 1> <Delay = 7.80>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%m_0 = phi i16 [ 0, %0 ], [ %m, %3 ]"   --->   Operation 8 'phi' 'm_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%phi_mul = phi i31 [ 0, %0 ], [ %add_ln128, %3 ]" [demodulation_FM.cpp:128]   --->   Operation 9 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (1.49ns)   --->   "%icmp_ln126 = icmp eq i16 %m_0, -25536" [demodulation_FM.cpp:126]   --->   Operation 10 'icmp' 'icmp_ln126' <Predicate = true> <Delay = 1.49> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 40000, i64 40000, i64 40000)"   --->   Operation 11 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (1.48ns)   --->   "%m = add i16 %m_0, 1" [demodulation_FM.cpp:126]   --->   Operation 12 'add' 'm' <Predicate = true> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "br i1 %icmp_ln126, label %4, label %_ZN13ap_fixed_baseILi42ELi18ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi41ELi17ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i68" [demodulation_FM.cpp:126]   --->   Operation 13 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (1.76ns)   --->   "%add_ln128 = add i31 45568, %phi_mul" [demodulation_FM.cpp:128]   --->   Operation 14 'add' 'add_ln128' <Predicate = (!icmp_ln126)> <Delay = 1.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%zext_ln128 = zext i31 %phi_mul to i63" [demodulation_FM.cpp:128]   --->   Operation 15 'zext' 'zext_ln128' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (6.58ns)   --->   "%mul_ln128 = mul i63 3518437209, %zext_ln128" [demodulation_FM.cpp:128]   --->   Operation 16 'mul' 'mul_ln128' <Predicate = (!icmp_ln126)> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%idx = call i6 @_ssdm_op_PartSelect.i6.i63.i32.i32(i63 %mul_ln128, i32 43, i32 48)" [demodulation_FM.cpp:128]   --->   Operation 17 'partselect' 'idx' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%n = call i8 @_ssdm_op_PartSelect.i8.i63.i32.i32(i63 %mul_ln128, i32 43, i32 50)" [demodulation_FM.cpp:128]   --->   Operation 18 'partselect' 'n' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (1.22ns)   --->   "%icmp_ln96 = icmp ult i8 %n, 65" [demodulation_FM.cpp:96->demodulation_FM.cpp:130]   --->   Operation 19 'icmp' 'icmp_ln96' <Predicate = (!icmp_ln126)> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i63.i32(i63 %mul_ln128, i32 50)" [demodulation_FM.cpp:100->demodulation_FM.cpp:130]   --->   Operation 20 'bitselect' 'tmp' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (1.22ns)   --->   "%icmp_ln104 = icmp ult i8 %n, -64" [demodulation_FM.cpp:104->demodulation_FM.cpp:130]   --->   Operation 21 'icmp' 'icmp_ln104' <Predicate = (!icmp_ln126)> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (1.22ns)   --->   "%icmp_ln132 = icmp eq i8 %n, 0" [demodulation_FM.cpp:132]   --->   Operation 22 'icmp' 'icmp_ln132' <Predicate = (!icmp_ln126)> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "ret void" [demodulation_FM.cpp:143]   --->   Operation 23 'ret' <Predicate = (icmp_ln126)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 4.69>
ST_3 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node idx_3)   --->   "%trunc_ln = call i7 @_ssdm_op_PartSelect.i7.i63.i32.i32(i63 %mul_ln128, i32 43, i32 49)" [demodulation_FM.cpp:129]   --->   Operation 24 'partselect' 'trunc_ln' <Predicate = (icmp_ln96)> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln105 = zext i6 %idx to i7" [demodulation_FM.cpp:105->demodulation_FM.cpp:130]   --->   Operation 25 'zext' 'zext_ln105' <Predicate = (!icmp_ln96)> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (1.37ns)   --->   "%idx_1 = sub i7 -64, %zext_ln105" [demodulation_FM.cpp:100->demodulation_FM.cpp:130]   --->   Operation 26 'sub' 'idx_1' <Predicate = (!icmp_ln96)> <Delay = 1.37> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 27 [1/1] (0.61ns)   --->   "%and_ln104 = and i1 %icmp_ln104, %tmp" [demodulation_FM.cpp:104->demodulation_FM.cpp:130]   --->   Operation 27 'and' 'and_ln104' <Predicate = true> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node idx_3)   --->   "%idx_2 = select i1 %and_ln104, i7 %zext_ln105, i7 %idx_1" [demodulation_FM.cpp:104->demodulation_FM.cpp:130]   --->   Operation 28 'select' 'idx_2' <Predicate = (!icmp_ln96)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.66ns) (out node of the LUT)   --->   "%idx_3 = select i1 %icmp_ln96, i7 %trunc_ln, i7 %idx_2" [demodulation_FM.cpp:96->demodulation_FM.cpp:130]   --->   Operation 29 'select' 'idx_3' <Predicate = true> <Delay = 0.66> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln1265 = zext i7 %idx_3 to i64" [demodulation_FM.cpp:114->demodulation_FM.cpp:130]   --->   Operation 30 'zext' 'zext_ln1265' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%cos_table_addr = getelementptr [65 x i9]* @cos_table, i64 0, i64 %zext_ln1265" [demodulation_FM.cpp:114->demodulation_FM.cpp:130]   --->   Operation 31 'getelementptr' 'cos_table_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [2/2] (2.66ns)   --->   "%p_Val2_s = load i9* %cos_table_addr, align 2" [demodulation_FM.cpp:114->demodulation_FM.cpp:130]   --->   Operation 32 'load' 'p_Val2_s' <Predicate = true> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 65> <ROM>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln130 = zext i16 %m_0 to i64" [demodulation_FM.cpp:130]   --->   Operation 33 'zext' 'zext_ln130' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%ary_r_V_addr = getelementptr [40000 x i32]* %ary_r_V, i64 0, i64 %zext_ln130" [demodulation_FM.cpp:130]   --->   Operation 34 'getelementptr' 'ary_r_V_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [2/2] (2.66ns)   --->   "%ary_r_V_load = load i32* %ary_r_V_addr, align 4" [demodulation_FM.cpp:130]   --->   Operation 35 'load' 'ary_r_V_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 40000> <RAM>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%sin_table_addr = getelementptr [65 x i9]* @sin_table, i64 0, i64 %zext_ln1265" [demodulation_FM.cpp:78->demodulation_FM.cpp:130]   --->   Operation 36 'getelementptr' 'sin_table_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [2/2] (2.66ns)   --->   "%p_Val2_2 = load i9* %sin_table_addr, align 2" [demodulation_FM.cpp:78->demodulation_FM.cpp:130]   --->   Operation 37 'load' 'p_Val2_2' <Predicate = true> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 65> <ROM>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%ary_i_V_addr = getelementptr [40000 x i32]* %ary_i_V, i64 0, i64 %zext_ln130" [demodulation_FM.cpp:130]   --->   Operation 38 'getelementptr' 'ary_i_V_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [2/2] (2.66ns)   --->   "%ary_i_V_load = load i32* %ary_i_V_addr, align 4" [demodulation_FM.cpp:130]   --->   Operation 39 'load' 'ary_i_V_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 40000> <RAM>

State 4 <SV = 3> <Delay = 4.68>
ST_4 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_1)   --->   "%xor_ln100 = xor i1 %tmp, true" [demodulation_FM.cpp:100->demodulation_FM.cpp:130]   --->   Operation 40 'xor' 'xor_ln100' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 41 [1/1] (0.61ns)   --->   "%xor_ln96 = xor i1 %icmp_ln96, true" [demodulation_FM.cpp:96->demodulation_FM.cpp:130]   --->   Operation 41 'xor' 'xor_ln96' <Predicate = true> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_1)   --->   "%and_ln100 = and i1 %xor_ln100, %xor_ln96" [demodulation_FM.cpp:100->demodulation_FM.cpp:130]   --->   Operation 42 'and' 'and_ln100' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_1)   --->   "%or_ln104 = or i1 %and_ln104, %and_ln100" [demodulation_FM.cpp:104->demodulation_FM.cpp:130]   --->   Operation 43 'or' 'or_ln104' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_1)   --->   "%and_ln96 = and i1 %or_ln104, %xor_ln96" [demodulation_FM.cpp:96->demodulation_FM.cpp:130]   --->   Operation 44 'and' 'and_ln96' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 45 [1/2] (2.66ns)   --->   "%p_Val2_s = load i9* %cos_table_addr, align 2" [demodulation_FM.cpp:114->demodulation_FM.cpp:130]   --->   Operation 45 'load' 'p_Val2_s' <Predicate = true> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 65> <ROM>
ST_4 : Operation 46 [1/1] (1.40ns)   --->   "%sub_ln703_2 = sub i9 0, %p_Val2_s" [demodulation_FM.cpp:114->demodulation_FM.cpp:130]   --->   Operation 46 'sub' 'sub_ln703_2' <Predicate = true> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 47 [1/1] (0.61ns) (out node of the LUT)   --->   "%p_Val2_1 = select i1 %and_ln96, i9 %sub_ln703_2, i9 %p_Val2_s" [demodulation_FM.cpp:112->demodulation_FM.cpp:130]   --->   Operation 47 'select' 'p_Val2_1' <Predicate = true> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 48 [1/2] (2.66ns)   --->   "%ary_r_V_load = load i32* %ary_r_V_addr, align 4" [demodulation_FM.cpp:130]   --->   Operation 48 'load' 'ary_r_V_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 40000> <RAM>
ST_4 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_3)   --->   "%and_ln60 = and i1 %tmp, %xor_ln96" [demodulation_FM.cpp:60->demodulation_FM.cpp:130]   --->   Operation 49 'and' 'and_ln60' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/2] (2.66ns)   --->   "%p_Val2_2 = load i9* %sin_table_addr, align 2" [demodulation_FM.cpp:78->demodulation_FM.cpp:130]   --->   Operation 50 'load' 'p_Val2_2' <Predicate = true> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 65> <ROM>
ST_4 : Operation 51 [1/1] (1.40ns)   --->   "%sub_ln703_3 = sub i9 0, %p_Val2_2" [demodulation_FM.cpp:78->demodulation_FM.cpp:130]   --->   Operation 51 'sub' 'sub_ln703_3' <Predicate = true> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 52 [1/1] (0.61ns) (out node of the LUT)   --->   "%p_Val2_3 = select i1 %and_ln60, i9 %sub_ln703_3, i9 %p_Val2_2" [demodulation_FM.cpp:76->demodulation_FM.cpp:130]   --->   Operation 52 'select' 'p_Val2_3' <Predicate = true> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 53 [1/2] (2.66ns)   --->   "%ary_i_V_load = load i32* %ary_i_V_addr, align 4" [demodulation_FM.cpp:130]   --->   Operation 53 'load' 'ary_i_V_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 40000> <RAM>

State 5 <SV = 4> <Delay = 8.27>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%sext_ln1118 = sext i32 %ary_r_V_load to i40" [demodulation_FM.cpp:130]   --->   Operation 54 'sext' 'sext_ln1118' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%sext_ln1118_1 = sext i9 %p_Val2_1 to i40" [demodulation_FM.cpp:130]   --->   Operation 55 'sext' 'sext_ln1118_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%sext_ln1118_2 = sext i32 %ary_i_V_load to i40" [demodulation_FM.cpp:130]   --->   Operation 56 'sext' 'sext_ln1118_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%sext_ln1118_3 = sext i9 %p_Val2_3 to i40" [demodulation_FM.cpp:130]   --->   Operation 57 'sext' 'sext_ln1118_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (6.58ns)   --->   "%mul_ln700 = mul i40 %sext_ln1118_1, %sext_ln1118" [demodulation_FM.cpp:130]   --->   Operation 58 'mul' 'mul_ln700' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (6.58ns)   --->   "%mul_ln1192 = mul i40 %sext_ln1118_3, %sext_ln1118_2" [demodulation_FM.cpp:130]   --->   Operation 59 'mul' 'mul_ln1192' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 60 [1/1] (1.69ns)   --->   "%ret_V = add i40 %mul_ln1192, %mul_ln700" [demodulation_FM.cpp:130]   --->   Operation 60 'add' 'ret_V' <Predicate = true> <Delay = 1.69> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%real_V = call i32 @_ssdm_op_PartSelect.i32.i40.i32.i32(i40 %ret_V, i32 8, i32 39)" [demodulation_FM.cpp:130]   --->   Operation 61 'partselect' 'real_V' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (6.58ns)   --->   "%mul_ln700_1 = mul i40 %sext_ln1118_1, %sext_ln1118_2" [demodulation_FM.cpp:131]   --->   Operation 62 'mul' 'mul_ln700_1' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 63 [1/1] (6.58ns)   --->   "%mul_ln1193 = mul i40 %sext_ln1118_3, %sext_ln1118" [demodulation_FM.cpp:131]   --->   Operation 63 'mul' 'mul_ln1193' <Predicate = true> <Delay = 6.58> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 64 [1/1] (1.69ns)   --->   "%ret_V_1 = sub i40 %mul_ln700_1, %mul_ln1193" [demodulation_FM.cpp:131]   --->   Operation 64 'sub' 'ret_V_1' <Predicate = true> <Delay = 1.69> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%imag_V = call i32 @_ssdm_op_PartSelect.i32.i40.i32.i32(i40 %ret_V_1, i32 8, i32 39)" [demodulation_FM.cpp:131]   --->   Operation 65 'partselect' 'imag_V' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "br i1 %icmp_ln132, label %_ZNK13ap_fixed_baseILi32ELi16ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEngEv.exit26, label %2" [demodulation_FM.cpp:132]   --->   Operation 66 'br' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 4.44>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "%ary_r_s_V_addr_1 = getelementptr [40000 x i32]* %ary_r_s_V, i64 0, i64 %zext_ln130" [demodulation_FM.cpp:139]   --->   Operation 67 'getelementptr' 'ary_r_s_V_addr_1' <Predicate = (!icmp_ln132)> <Delay = 0.00>
ST_6 : Operation 68 [1/1] (2.66ns)   --->   "store i32 %real_V, i32* %ary_r_s_V_addr_1, align 4" [demodulation_FM.cpp:139]   --->   Operation 68 'store' <Predicate = (!icmp_ln132)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 40000> <RAM>
ST_6 : Operation 69 [1/1] (0.00ns)   --->   "%ary_i_s_V_addr_1 = getelementptr [40000 x i32]* %ary_i_s_V, i64 0, i64 %zext_ln130" [demodulation_FM.cpp:140]   --->   Operation 69 'getelementptr' 'ary_i_s_V_addr_1' <Predicate = (!icmp_ln132)> <Delay = 0.00>
ST_6 : Operation 70 [1/1] (2.66ns)   --->   "store i32 %imag_V, i32* %ary_i_s_V_addr_1, align 4" [demodulation_FM.cpp:140]   --->   Operation 70 'store' <Predicate = (!icmp_ln132)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 40000> <RAM>
ST_6 : Operation 71 [1/1] (0.00ns)   --->   "br label %3"   --->   Operation 71 'br' <Predicate = (!icmp_ln132)> <Delay = 0.00>
ST_6 : Operation 72 [1/1] (1.78ns)   --->   "%sub_ln703 = sub i32 0, %real_V" [demodulation_FM.cpp:134]   --->   Operation 72 'sub' 'sub_ln703' <Predicate = (icmp_ln132)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 73 [1/1] (0.00ns)   --->   "%ary_r_s_V_addr = getelementptr [40000 x i32]* %ary_r_s_V, i64 0, i64 %zext_ln130" [demodulation_FM.cpp:134]   --->   Operation 73 'getelementptr' 'ary_r_s_V_addr' <Predicate = (icmp_ln132)> <Delay = 0.00>
ST_6 : Operation 74 [1/1] (2.66ns)   --->   "store i32 %sub_ln703, i32* %ary_r_s_V_addr, align 4" [demodulation_FM.cpp:134]   --->   Operation 74 'store' <Predicate = (icmp_ln132)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 40000> <RAM>
ST_6 : Operation 75 [1/1] (1.78ns)   --->   "%sub_ln703_1 = sub i32 0, %imag_V" [demodulation_FM.cpp:135]   --->   Operation 75 'sub' 'sub_ln703_1' <Predicate = (icmp_ln132)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%ary_i_s_V_addr = getelementptr [40000 x i32]* %ary_i_s_V, i64 0, i64 %zext_ln130" [demodulation_FM.cpp:135]   --->   Operation 76 'getelementptr' 'ary_i_s_V_addr' <Predicate = (icmp_ln132)> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (2.66ns)   --->   "store i32 %sub_ln703_1, i32* %ary_i_s_V_addr, align 4" [demodulation_FM.cpp:135]   --->   Operation 77 'store' <Predicate = (icmp_ln132)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 40000> <RAM>
ST_6 : Operation 78 [1/1] (0.00ns)   --->   "br label %3" [demodulation_FM.cpp:136]   --->   Operation 78 'br' <Predicate = (icmp_ln132)> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (0.00ns)   --->   "br label %1" [demodulation_FM.cpp:126]   --->   Operation 79 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.06ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('m') with incoming values : ('m', demodulation_FM.cpp:126) [11]  (1.06 ns)

 <State 2>: 7.81ns
The critical path consists of the following:
	'phi' operation ('phi_mul', demodulation_FM.cpp:128) with incoming values : ('add_ln128', demodulation_FM.cpp:128) [12]  (0 ns)
	'mul' operation ('mul_ln128', demodulation_FM.cpp:128) [20]  (6.58 ns)
	'icmp' operation ('icmp_ln96', demodulation_FM.cpp:96->demodulation_FM.cpp:130) [24]  (1.22 ns)

 <State 3>: 4.7ns
The critical path consists of the following:
	'sub' operation ('idx', demodulation_FM.cpp:100->demodulation_FM.cpp:130) [29]  (1.37 ns)
	'select' operation ('idx', demodulation_FM.cpp:104->demodulation_FM.cpp:130) [31]  (0 ns)
	'select' operation ('idx', demodulation_FM.cpp:96->demodulation_FM.cpp:130) [32]  (0.66 ns)
	'getelementptr' operation ('cos_table_addr', demodulation_FM.cpp:114->demodulation_FM.cpp:130) [38]  (0 ns)
	'load' operation ('__Val2__', demodulation_FM.cpp:114->demodulation_FM.cpp:130) on array 'cos_table' [39]  (2.66 ns)

 <State 4>: 4.68ns
The critical path consists of the following:
	'load' operation ('__Val2__', demodulation_FM.cpp:114->demodulation_FM.cpp:130) on array 'cos_table' [39]  (2.66 ns)
	'sub' operation ('sub_ln703_2', demodulation_FM.cpp:114->demodulation_FM.cpp:130) [40]  (1.4 ns)
	'select' operation ('__Val2__', demodulation_FM.cpp:112->demodulation_FM.cpp:130) [41]  (0.616 ns)

 <State 5>: 8.27ns
The critical path consists of the following:
	'mul' operation ('mul_ln700', demodulation_FM.cpp:130) [56]  (6.58 ns)
	'add' operation ('ret.V', demodulation_FM.cpp:130) [58]  (1.69 ns)

 <State 6>: 4.45ns
The critical path consists of the following:
	'sub' operation ('sub_ln703', demodulation_FM.cpp:134) [73]  (1.78 ns)
	'store' operation ('store_ln134', demodulation_FM.cpp:134) of variable 'sub_ln703', demodulation_FM.cpp:134 on array 'ary_r_s_V' [75]  (2.66 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
