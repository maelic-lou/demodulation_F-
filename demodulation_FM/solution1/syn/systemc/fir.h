// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fir_HH_
#define _fir_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "fir_coef.h"

namespace ap_rtl {

struct fir : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<16> > x_V_address0;
    sc_out< sc_logic > x_V_ce0;
    sc_in< sc_lv<32> > x_V_q0;
    sc_out< sc_lv<16> > y_V_address0;
    sc_out< sc_logic > y_V_ce0;
    sc_out< sc_logic > y_V_we0;
    sc_out< sc_lv<32> > y_V_d0;


    // Module declarations
    fir(sc_module_name name);
    SC_HAS_PROCESS(fir);

    ~fir();

    sc_trace_file* mVcdFile;

    fir_coef* coef_U;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > coef_address0;
    sc_signal< sc_logic > coef_ce0;
    sc_signal< sc_lv<14> > coef_q0;
    sc_signal< sc_lv<5> > j_fu_147_p2;
    sc_signal< sc_lv<5> > j_reg_250;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln39_fu_153_p1;
    sc_signal< sc_lv<64> > zext_ln39_reg_255;
    sc_signal< sc_lv<1> > icmp_ln37_fu_141_p2;
    sc_signal< sc_lv<5> > k_fu_174_p2;
    sc_signal< sc_lv<5> > k_reg_271;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln44_fu_168_p2;
    sc_signal< sc_lv<16> > l_fu_201_p2;
    sc_signal< sc_lv<14> > coef_load_reg_291;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > x_V_load_1_reg_296;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<5> > j_0_reg_94;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<16> > l_0_reg_105;
    sc_signal< sc_lv<32> > p_Val2_s_reg_117;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln41_fu_158_p2;
    sc_signal< sc_lv<5> > k_0_reg_130;
    sc_signal< sc_lv<64> > zext_ln46_fu_180_p1;
    sc_signal< sc_lv<64> > zext_ln46_1_fu_191_p1;
    sc_signal< sc_lv<64> > zext_ln48_fu_196_p1;
    sc_signal< sc_lv<16> > zext_ln44_fu_164_p1;
    sc_signal< sc_lv<16> > sub_ln46_fu_185_p2;
    sc_signal< sc_lv<14> > r_V_fu_213_p0;
    sc_signal< sc_lv<32> > r_V_fu_213_p1;
    sc_signal< sc_lv<46> > r_V_fu_213_p2;
    sc_signal< sc_lv<48> > lhs_V_fu_219_p3;
    sc_signal< sc_lv<48> > sext_ln1192_fu_227_p1;
    sc_signal< sc_lv<48> > ret_V_fu_231_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<16> ap_const_lv16_1F;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<16> ap_const_lv16_9C40;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_2F;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_coef_address0();
    void thread_coef_ce0();
    void thread_icmp_ln37_fu_141_p2();
    void thread_icmp_ln41_fu_158_p2();
    void thread_icmp_ln44_fu_168_p2();
    void thread_j_fu_147_p2();
    void thread_k_fu_174_p2();
    void thread_l_fu_201_p2();
    void thread_lhs_V_fu_219_p3();
    void thread_r_V_fu_213_p0();
    void thread_r_V_fu_213_p1();
    void thread_r_V_fu_213_p2();
    void thread_ret_V_fu_231_p2();
    void thread_sext_ln1192_fu_227_p1();
    void thread_sub_ln46_fu_185_p2();
    void thread_x_V_address0();
    void thread_x_V_ce0();
    void thread_y_V_address0();
    void thread_y_V_ce0();
    void thread_y_V_d0();
    void thread_y_V_we0();
    void thread_zext_ln39_fu_153_p1();
    void thread_zext_ln44_fu_164_p1();
    void thread_zext_ln46_1_fu_191_p1();
    void thread_zext_ln46_fu_180_p1();
    void thread_zext_ln48_fu_196_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
