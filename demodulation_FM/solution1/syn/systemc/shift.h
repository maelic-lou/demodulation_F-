// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _shift_HH_
#define _shift_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "shift_cos_table.h"
#include "shift_sin_table.h"

namespace ap_rtl {

struct shift : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<16> > ary_r_V_address0;
    sc_out< sc_logic > ary_r_V_ce0;
    sc_in< sc_lv<32> > ary_r_V_q0;
    sc_out< sc_lv<16> > ary_i_V_address0;
    sc_out< sc_logic > ary_i_V_ce0;
    sc_in< sc_lv<32> > ary_i_V_q0;
    sc_out< sc_lv<16> > ary_r_s_V_address0;
    sc_out< sc_logic > ary_r_s_V_ce0;
    sc_out< sc_logic > ary_r_s_V_we0;
    sc_out< sc_lv<32> > ary_r_s_V_d0;
    sc_out< sc_lv<16> > ary_i_s_V_address0;
    sc_out< sc_logic > ary_i_s_V_ce0;
    sc_out< sc_logic > ary_i_s_V_we0;
    sc_out< sc_lv<32> > ary_i_s_V_d0;


    // Module declarations
    shift(sc_module_name name);
    SC_HAS_PROCESS(shift);

    ~shift();

    sc_trace_file* mVcdFile;

    shift_cos_table* cos_table_U;
    shift_sin_table* sin_table_U;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > cos_table_address0;
    sc_signal< sc_logic > cos_table_ce0;
    sc_signal< sc_lv<9> > cos_table_q0;
    sc_signal< sc_lv<7> > sin_table_address0;
    sc_signal< sc_logic > sin_table_ce0;
    sc_signal< sc_lv<9> > sin_table_q0;
    sc_signal< sc_lv<16> > m_fu_189_p2;
    sc_signal< sc_lv<16> > m_reg_449;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<31> > add_ln128_fu_195_p2;
    sc_signal< sc_lv<31> > add_ln128_reg_454;
    sc_signal< sc_lv<1> > icmp_ln126_fu_183_p2;
    sc_signal< sc_lv<63> > mul_ln128_fu_205_p2;
    sc_signal< sc_lv<63> > mul_ln128_reg_459;
    sc_signal< sc_lv<6> > idx_reg_464;
    sc_signal< sc_lv<1> > icmp_ln96_fu_231_p2;
    sc_signal< sc_lv<1> > icmp_ln96_reg_469;
    sc_signal< sc_lv<1> > tmp_reg_475;
    sc_signal< sc_lv<1> > icmp_ln104_fu_245_p2;
    sc_signal< sc_lv<1> > icmp_ln104_reg_482;
    sc_signal< sc_lv<1> > icmp_ln132_fu_251_p2;
    sc_signal< sc_lv<1> > icmp_ln132_reg_487;
    sc_signal< sc_lv<1> > and_ln104_fu_275_p2;
    sc_signal< sc_lv<1> > and_ln104_reg_491;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > zext_ln130_fu_300_p1;
    sc_signal< sc_lv<64> > zext_ln130_reg_501;
    sc_signal< sc_lv<9> > p_Val2_1_fu_339_p3;
    sc_signal< sc_lv<9> > p_Val2_1_reg_524;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > ary_r_V_load_reg_529;
    sc_signal< sc_lv<9> > p_Val2_3_fu_358_p3;
    sc_signal< sc_lv<9> > p_Val2_3_reg_534;
    sc_signal< sc_lv<32> > ary_i_V_load_reg_539;
    sc_signal< sc_lv<32> > real_V_reg_544;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > imag_V_reg_550;
    sc_signal< sc_lv<16> > m_0_reg_160;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<31> > phi_mul_reg_172;
    sc_signal< sc_lv<64> > zext_ln1265_fu_294_p1;
    sc_signal< sc_lv<16> > ary_r_s_V_addr_gep_fu_144_p3;
    sc_signal< sc_lv<16> > ary_i_s_V_addr_gep_fu_152_p3;
    sc_signal< sc_lv<32> > sub_ln703_fu_434_p2;
    sc_signal< sc_lv<32> > sub_ln703_1_fu_440_p2;
    sc_signal< sc_lv<31> > mul_ln128_fu_205_p1;
    sc_signal< sc_lv<8> > n_fu_221_p4;
    sc_signal< sc_lv<7> > zext_ln105_fu_266_p1;
    sc_signal< sc_lv<7> > idx_1_fu_269_p2;
    sc_signal< sc_lv<7> > trunc_ln_fu_257_p4;
    sc_signal< sc_lv<7> > idx_2_fu_279_p3;
    sc_signal< sc_lv<7> > idx_3_fu_287_p3;
    sc_signal< sc_lv<1> > xor_ln100_fu_306_p2;
    sc_signal< sc_lv<1> > xor_ln96_fu_311_p2;
    sc_signal< sc_lv<1> > and_ln100_fu_316_p2;
    sc_signal< sc_lv<1> > or_ln104_fu_322_p2;
    sc_signal< sc_lv<1> > and_ln96_fu_327_p2;
    sc_signal< sc_lv<9> > sub_ln703_2_fu_333_p2;
    sc_signal< sc_lv<1> > and_ln60_fu_347_p2;
    sc_signal< sc_lv<9> > sub_ln703_3_fu_352_p2;
    sc_signal< sc_lv<9> > mul_ln700_fu_378_p0;
    sc_signal< sc_lv<40> > sext_ln1118_1_fu_369_p1;
    sc_signal< sc_lv<32> > mul_ln700_fu_378_p1;
    sc_signal< sc_lv<40> > sext_ln1118_fu_366_p1;
    sc_signal< sc_lv<9> > mul_ln1192_fu_384_p0;
    sc_signal< sc_lv<40> > sext_ln1118_3_fu_375_p1;
    sc_signal< sc_lv<32> > mul_ln1192_fu_384_p1;
    sc_signal< sc_lv<40> > sext_ln1118_2_fu_372_p1;
    sc_signal< sc_lv<40> > mul_ln1192_fu_384_p2;
    sc_signal< sc_lv<40> > mul_ln700_fu_378_p2;
    sc_signal< sc_lv<40> > ret_V_fu_390_p2;
    sc_signal< sc_lv<9> > mul_ln700_1_fu_406_p0;
    sc_signal< sc_lv<32> > mul_ln700_1_fu_406_p1;
    sc_signal< sc_lv<9> > mul_ln1193_fu_412_p0;
    sc_signal< sc_lv<32> > mul_ln1193_fu_412_p1;
    sc_signal< sc_lv<40> > mul_ln700_1_fu_406_p2;
    sc_signal< sc_lv<40> > mul_ln1193_fu_412_p2;
    sc_signal< sc_lv<40> > ret_V_1_fu_418_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_lv<63> > mul_ln128_fu_205_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<16> ap_const_lv16_9C40;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<31> ap_const_lv31_B200;
    static const sc_lv<63> ap_const_lv63_D1B71759;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_32;
    static const sc_lv<8> ap_const_lv8_41;
    static const sc_lv<8> ap_const_lv8_C0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_27;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln128_fu_195_p2();
    void thread_and_ln100_fu_316_p2();
    void thread_and_ln104_fu_275_p2();
    void thread_and_ln60_fu_347_p2();
    void thread_and_ln96_fu_327_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ary_i_V_address0();
    void thread_ary_i_V_ce0();
    void thread_ary_i_s_V_addr_gep_fu_152_p3();
    void thread_ary_i_s_V_address0();
    void thread_ary_i_s_V_ce0();
    void thread_ary_i_s_V_d0();
    void thread_ary_i_s_V_we0();
    void thread_ary_r_V_address0();
    void thread_ary_r_V_ce0();
    void thread_ary_r_s_V_addr_gep_fu_144_p3();
    void thread_ary_r_s_V_address0();
    void thread_ary_r_s_V_ce0();
    void thread_ary_r_s_V_d0();
    void thread_ary_r_s_V_we0();
    void thread_cos_table_address0();
    void thread_cos_table_ce0();
    void thread_icmp_ln104_fu_245_p2();
    void thread_icmp_ln126_fu_183_p2();
    void thread_icmp_ln132_fu_251_p2();
    void thread_icmp_ln96_fu_231_p2();
    void thread_idx_1_fu_269_p2();
    void thread_idx_2_fu_279_p3();
    void thread_idx_3_fu_287_p3();
    void thread_m_fu_189_p2();
    void thread_mul_ln1192_fu_384_p0();
    void thread_mul_ln1192_fu_384_p1();
    void thread_mul_ln1192_fu_384_p2();
    void thread_mul_ln1193_fu_412_p0();
    void thread_mul_ln1193_fu_412_p1();
    void thread_mul_ln1193_fu_412_p2();
    void thread_mul_ln128_fu_205_p1();
    void thread_mul_ln128_fu_205_p10();
    void thread_mul_ln128_fu_205_p2();
    void thread_mul_ln700_1_fu_406_p0();
    void thread_mul_ln700_1_fu_406_p1();
    void thread_mul_ln700_1_fu_406_p2();
    void thread_mul_ln700_fu_378_p0();
    void thread_mul_ln700_fu_378_p1();
    void thread_mul_ln700_fu_378_p2();
    void thread_n_fu_221_p4();
    void thread_or_ln104_fu_322_p2();
    void thread_p_Val2_1_fu_339_p3();
    void thread_p_Val2_3_fu_358_p3();
    void thread_ret_V_1_fu_418_p2();
    void thread_ret_V_fu_390_p2();
    void thread_sext_ln1118_1_fu_369_p1();
    void thread_sext_ln1118_2_fu_372_p1();
    void thread_sext_ln1118_3_fu_375_p1();
    void thread_sext_ln1118_fu_366_p1();
    void thread_sin_table_address0();
    void thread_sin_table_ce0();
    void thread_sub_ln703_1_fu_440_p2();
    void thread_sub_ln703_2_fu_333_p2();
    void thread_sub_ln703_3_fu_352_p2();
    void thread_sub_ln703_fu_434_p2();
    void thread_trunc_ln_fu_257_p4();
    void thread_xor_ln100_fu_306_p2();
    void thread_xor_ln96_fu_311_p2();
    void thread_zext_ln105_fu_266_p1();
    void thread_zext_ln1265_fu_294_p1();
    void thread_zext_ln130_fu_300_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
