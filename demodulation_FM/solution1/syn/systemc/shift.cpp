// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "shift.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic shift::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic shift::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> shift::ap_ST_fsm_state1 = "1";
const sc_lv<6> shift::ap_ST_fsm_state2 = "10";
const sc_lv<6> shift::ap_ST_fsm_state3 = "100";
const sc_lv<6> shift::ap_ST_fsm_state4 = "1000";
const sc_lv<6> shift::ap_ST_fsm_state5 = "10000";
const sc_lv<6> shift::ap_ST_fsm_state6 = "100000";
const sc_lv<32> shift::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> shift::ap_const_lv32_1 = "1";
const sc_lv<1> shift::ap_const_lv1_0 = "0";
const sc_lv<32> shift::ap_const_lv32_2 = "10";
const sc_lv<32> shift::ap_const_lv32_3 = "11";
const sc_lv<32> shift::ap_const_lv32_4 = "100";
const sc_lv<16> shift::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> shift::ap_const_lv32_5 = "101";
const sc_lv<31> shift::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<1> shift::ap_const_lv1_1 = "1";
const sc_lv<16> shift::ap_const_lv16_9C40 = "1001110001000000";
const sc_lv<16> shift::ap_const_lv16_1 = "1";
const sc_lv<31> shift::ap_const_lv31_B200 = "1011001000000000";
const sc_lv<63> shift::ap_const_lv63_D1B71759 = "11010001101101110001011101011001";
const sc_lv<32> shift::ap_const_lv32_2B = "101011";
const sc_lv<32> shift::ap_const_lv32_30 = "110000";
const sc_lv<32> shift::ap_const_lv32_32 = "110010";
const sc_lv<8> shift::ap_const_lv8_41 = "1000001";
const sc_lv<8> shift::ap_const_lv8_C0 = "11000000";
const sc_lv<8> shift::ap_const_lv8_0 = "00000000";
const sc_lv<32> shift::ap_const_lv32_31 = "110001";
const sc_lv<7> shift::ap_const_lv7_40 = "1000000";
const sc_lv<9> shift::ap_const_lv9_0 = "000000000";
const sc_lv<32> shift::ap_const_lv32_8 = "1000";
const sc_lv<32> shift::ap_const_lv32_27 = "100111";
const bool shift::ap_const_boolean_1 = true;

shift::shift(sc_module_name name) : sc_module(name), mVcdFile(0) {
    cos_table_U = new shift_cos_table("cos_table_U");
    cos_table_U->clk(ap_clk);
    cos_table_U->reset(ap_rst);
    cos_table_U->address0(cos_table_address0);
    cos_table_U->ce0(cos_table_ce0);
    cos_table_U->q0(cos_table_q0);
    sin_table_U = new shift_sin_table("sin_table_U");
    sin_table_U->clk(ap_clk);
    sin_table_U->reset(ap_rst);
    sin_table_U->address0(sin_table_address0);
    sin_table_U->ce0(sin_table_ce0);
    sin_table_U->q0(sin_table_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln128_fu_195_p2);
    sensitive << ( phi_mul_reg_172 );

    SC_METHOD(thread_and_ln100_fu_316_p2);
    sensitive << ( xor_ln100_fu_306_p2 );
    sensitive << ( xor_ln96_fu_311_p2 );

    SC_METHOD(thread_and_ln104_fu_275_p2);
    sensitive << ( tmp_reg_475 );
    sensitive << ( icmp_ln104_reg_482 );

    SC_METHOD(thread_and_ln60_fu_347_p2);
    sensitive << ( tmp_reg_475 );
    sensitive << ( xor_ln96_fu_311_p2 );

    SC_METHOD(thread_and_ln96_fu_327_p2);
    sensitive << ( xor_ln96_fu_311_p2 );
    sensitive << ( or_ln104_fu_322_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln126_fu_183_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln126_fu_183_p2 );

    SC_METHOD(thread_ary_i_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln130_fu_300_p1 );

    SC_METHOD(thread_ary_i_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ary_i_s_V_addr_gep_fu_152_p3);
    sensitive << ( icmp_ln132_reg_487 );
    sensitive << ( zext_ln130_reg_501 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ary_i_s_V_address0);
    sensitive << ( icmp_ln132_reg_487 );
    sensitive << ( zext_ln130_reg_501 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ary_i_s_V_addr_gep_fu_152_p3 );

    SC_METHOD(thread_ary_i_s_V_ce0);
    sensitive << ( icmp_ln132_reg_487 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ary_i_s_V_d0);
    sensitive << ( icmp_ln132_reg_487 );
    sensitive << ( imag_V_reg_550 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sub_ln703_1_fu_440_p2 );

    SC_METHOD(thread_ary_i_s_V_we0);
    sensitive << ( icmp_ln132_reg_487 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ary_r_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln130_fu_300_p1 );

    SC_METHOD(thread_ary_r_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ary_r_s_V_addr_gep_fu_144_p3);
    sensitive << ( icmp_ln132_reg_487 );
    sensitive << ( zext_ln130_reg_501 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ary_r_s_V_address0);
    sensitive << ( icmp_ln132_reg_487 );
    sensitive << ( zext_ln130_reg_501 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ary_r_s_V_addr_gep_fu_144_p3 );

    SC_METHOD(thread_ary_r_s_V_ce0);
    sensitive << ( icmp_ln132_reg_487 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ary_r_s_V_d0);
    sensitive << ( icmp_ln132_reg_487 );
    sensitive << ( real_V_reg_544 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sub_ln703_fu_434_p2 );

    SC_METHOD(thread_ary_r_s_V_we0);
    sensitive << ( icmp_ln132_reg_487 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_cos_table_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1265_fu_294_p1 );

    SC_METHOD(thread_cos_table_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_icmp_ln104_fu_245_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln126_fu_183_p2 );
    sensitive << ( n_fu_221_p4 );

    SC_METHOD(thread_icmp_ln126_fu_183_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( m_0_reg_160 );

    SC_METHOD(thread_icmp_ln132_fu_251_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln126_fu_183_p2 );
    sensitive << ( n_fu_221_p4 );

    SC_METHOD(thread_icmp_ln96_fu_231_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln126_fu_183_p2 );
    sensitive << ( n_fu_221_p4 );

    SC_METHOD(thread_idx_1_fu_269_p2);
    sensitive << ( zext_ln105_fu_266_p1 );

    SC_METHOD(thread_idx_2_fu_279_p3);
    sensitive << ( and_ln104_fu_275_p2 );
    sensitive << ( zext_ln105_fu_266_p1 );
    sensitive << ( idx_1_fu_269_p2 );

    SC_METHOD(thread_idx_3_fu_287_p3);
    sensitive << ( icmp_ln96_reg_469 );
    sensitive << ( trunc_ln_fu_257_p4 );
    sensitive << ( idx_2_fu_279_p3 );

    SC_METHOD(thread_m_fu_189_p2);
    sensitive << ( m_0_reg_160 );

    SC_METHOD(thread_mul_ln1192_fu_384_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln1118_3_fu_375_p1 );

    SC_METHOD(thread_mul_ln1192_fu_384_p1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln1118_2_fu_372_p1 );

    SC_METHOD(thread_mul_ln1192_fu_384_p2);
    sensitive << ( mul_ln1192_fu_384_p0 );
    sensitive << ( mul_ln1192_fu_384_p1 );

    SC_METHOD(thread_mul_ln1193_fu_412_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln1118_3_fu_375_p1 );

    SC_METHOD(thread_mul_ln1193_fu_412_p1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln1118_fu_366_p1 );

    SC_METHOD(thread_mul_ln1193_fu_412_p2);
    sensitive << ( mul_ln1193_fu_412_p0 );
    sensitive << ( mul_ln1193_fu_412_p1 );

    SC_METHOD(thread_mul_ln128_fu_205_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( mul_ln128_fu_205_p10 );

    SC_METHOD(thread_mul_ln128_fu_205_p10);
    sensitive << ( phi_mul_reg_172 );

    SC_METHOD(thread_mul_ln128_fu_205_p2);
    sensitive << ( mul_ln128_fu_205_p1 );

    SC_METHOD(thread_mul_ln700_1_fu_406_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln1118_1_fu_369_p1 );

    SC_METHOD(thread_mul_ln700_1_fu_406_p1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln1118_2_fu_372_p1 );

    SC_METHOD(thread_mul_ln700_1_fu_406_p2);
    sensitive << ( mul_ln700_1_fu_406_p0 );
    sensitive << ( mul_ln700_1_fu_406_p1 );

    SC_METHOD(thread_mul_ln700_fu_378_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln1118_1_fu_369_p1 );

    SC_METHOD(thread_mul_ln700_fu_378_p1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln1118_fu_366_p1 );

    SC_METHOD(thread_mul_ln700_fu_378_p2);
    sensitive << ( mul_ln700_fu_378_p0 );
    sensitive << ( mul_ln700_fu_378_p1 );

    SC_METHOD(thread_n_fu_221_p4);
    sensitive << ( mul_ln128_fu_205_p2 );

    SC_METHOD(thread_or_ln104_fu_322_p2);
    sensitive << ( and_ln104_reg_491 );
    sensitive << ( and_ln100_fu_316_p2 );

    SC_METHOD(thread_p_Val2_1_fu_339_p3);
    sensitive << ( cos_table_q0 );
    sensitive << ( and_ln96_fu_327_p2 );
    sensitive << ( sub_ln703_2_fu_333_p2 );

    SC_METHOD(thread_p_Val2_3_fu_358_p3);
    sensitive << ( sin_table_q0 );
    sensitive << ( and_ln60_fu_347_p2 );
    sensitive << ( sub_ln703_3_fu_352_p2 );

    SC_METHOD(thread_ret_V_1_fu_418_p2);
    sensitive << ( mul_ln700_1_fu_406_p2 );
    sensitive << ( mul_ln1193_fu_412_p2 );

    SC_METHOD(thread_ret_V_fu_390_p2);
    sensitive << ( mul_ln1192_fu_384_p2 );
    sensitive << ( mul_ln700_fu_378_p2 );

    SC_METHOD(thread_sext_ln1118_1_fu_369_p1);
    sensitive << ( p_Val2_1_reg_524 );

    SC_METHOD(thread_sext_ln1118_2_fu_372_p1);
    sensitive << ( ary_i_V_load_reg_539 );

    SC_METHOD(thread_sext_ln1118_3_fu_375_p1);
    sensitive << ( p_Val2_3_reg_534 );

    SC_METHOD(thread_sext_ln1118_fu_366_p1);
    sensitive << ( ary_r_V_load_reg_529 );

    SC_METHOD(thread_sin_table_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1265_fu_294_p1 );

    SC_METHOD(thread_sin_table_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_sub_ln703_1_fu_440_p2);
    sensitive << ( imag_V_reg_550 );

    SC_METHOD(thread_sub_ln703_2_fu_333_p2);
    sensitive << ( cos_table_q0 );

    SC_METHOD(thread_sub_ln703_3_fu_352_p2);
    sensitive << ( sin_table_q0 );

    SC_METHOD(thread_sub_ln703_fu_434_p2);
    sensitive << ( real_V_reg_544 );

    SC_METHOD(thread_trunc_ln_fu_257_p4);
    sensitive << ( mul_ln128_reg_459 );

    SC_METHOD(thread_xor_ln100_fu_306_p2);
    sensitive << ( tmp_reg_475 );

    SC_METHOD(thread_xor_ln96_fu_311_p2);
    sensitive << ( icmp_ln96_reg_469 );

    SC_METHOD(thread_zext_ln105_fu_266_p1);
    sensitive << ( idx_reg_464 );

    SC_METHOD(thread_zext_ln1265_fu_294_p1);
    sensitive << ( idx_3_fu_287_p3 );

    SC_METHOD(thread_zext_ln130_fu_300_p1);
    sensitive << ( m_0_reg_160 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln126_fu_183_p2 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "shift_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ary_r_V_address0, "(port)ary_r_V_address0");
    sc_trace(mVcdFile, ary_r_V_ce0, "(port)ary_r_V_ce0");
    sc_trace(mVcdFile, ary_r_V_q0, "(port)ary_r_V_q0");
    sc_trace(mVcdFile, ary_i_V_address0, "(port)ary_i_V_address0");
    sc_trace(mVcdFile, ary_i_V_ce0, "(port)ary_i_V_ce0");
    sc_trace(mVcdFile, ary_i_V_q0, "(port)ary_i_V_q0");
    sc_trace(mVcdFile, ary_r_s_V_address0, "(port)ary_r_s_V_address0");
    sc_trace(mVcdFile, ary_r_s_V_ce0, "(port)ary_r_s_V_ce0");
    sc_trace(mVcdFile, ary_r_s_V_we0, "(port)ary_r_s_V_we0");
    sc_trace(mVcdFile, ary_r_s_V_d0, "(port)ary_r_s_V_d0");
    sc_trace(mVcdFile, ary_i_s_V_address0, "(port)ary_i_s_V_address0");
    sc_trace(mVcdFile, ary_i_s_V_ce0, "(port)ary_i_s_V_ce0");
    sc_trace(mVcdFile, ary_i_s_V_we0, "(port)ary_i_s_V_we0");
    sc_trace(mVcdFile, ary_i_s_V_d0, "(port)ary_i_s_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, cos_table_address0, "cos_table_address0");
    sc_trace(mVcdFile, cos_table_ce0, "cos_table_ce0");
    sc_trace(mVcdFile, cos_table_q0, "cos_table_q0");
    sc_trace(mVcdFile, sin_table_address0, "sin_table_address0");
    sc_trace(mVcdFile, sin_table_ce0, "sin_table_ce0");
    sc_trace(mVcdFile, sin_table_q0, "sin_table_q0");
    sc_trace(mVcdFile, m_fu_189_p2, "m_fu_189_p2");
    sc_trace(mVcdFile, m_reg_449, "m_reg_449");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln128_fu_195_p2, "add_ln128_fu_195_p2");
    sc_trace(mVcdFile, add_ln128_reg_454, "add_ln128_reg_454");
    sc_trace(mVcdFile, icmp_ln126_fu_183_p2, "icmp_ln126_fu_183_p2");
    sc_trace(mVcdFile, mul_ln128_fu_205_p2, "mul_ln128_fu_205_p2");
    sc_trace(mVcdFile, mul_ln128_reg_459, "mul_ln128_reg_459");
    sc_trace(mVcdFile, idx_reg_464, "idx_reg_464");
    sc_trace(mVcdFile, icmp_ln96_fu_231_p2, "icmp_ln96_fu_231_p2");
    sc_trace(mVcdFile, icmp_ln96_reg_469, "icmp_ln96_reg_469");
    sc_trace(mVcdFile, tmp_reg_475, "tmp_reg_475");
    sc_trace(mVcdFile, icmp_ln104_fu_245_p2, "icmp_ln104_fu_245_p2");
    sc_trace(mVcdFile, icmp_ln104_reg_482, "icmp_ln104_reg_482");
    sc_trace(mVcdFile, icmp_ln132_fu_251_p2, "icmp_ln132_fu_251_p2");
    sc_trace(mVcdFile, icmp_ln132_reg_487, "icmp_ln132_reg_487");
    sc_trace(mVcdFile, and_ln104_fu_275_p2, "and_ln104_fu_275_p2");
    sc_trace(mVcdFile, and_ln104_reg_491, "and_ln104_reg_491");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln130_fu_300_p1, "zext_ln130_fu_300_p1");
    sc_trace(mVcdFile, zext_ln130_reg_501, "zext_ln130_reg_501");
    sc_trace(mVcdFile, p_Val2_1_fu_339_p3, "p_Val2_1_fu_339_p3");
    sc_trace(mVcdFile, p_Val2_1_reg_524, "p_Val2_1_reg_524");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ary_r_V_load_reg_529, "ary_r_V_load_reg_529");
    sc_trace(mVcdFile, p_Val2_3_fu_358_p3, "p_Val2_3_fu_358_p3");
    sc_trace(mVcdFile, p_Val2_3_reg_534, "p_Val2_3_reg_534");
    sc_trace(mVcdFile, ary_i_V_load_reg_539, "ary_i_V_load_reg_539");
    sc_trace(mVcdFile, real_V_reg_544, "real_V_reg_544");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, imag_V_reg_550, "imag_V_reg_550");
    sc_trace(mVcdFile, m_0_reg_160, "m_0_reg_160");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, phi_mul_reg_172, "phi_mul_reg_172");
    sc_trace(mVcdFile, zext_ln1265_fu_294_p1, "zext_ln1265_fu_294_p1");
    sc_trace(mVcdFile, ary_r_s_V_addr_gep_fu_144_p3, "ary_r_s_V_addr_gep_fu_144_p3");
    sc_trace(mVcdFile, ary_i_s_V_addr_gep_fu_152_p3, "ary_i_s_V_addr_gep_fu_152_p3");
    sc_trace(mVcdFile, sub_ln703_fu_434_p2, "sub_ln703_fu_434_p2");
    sc_trace(mVcdFile, sub_ln703_1_fu_440_p2, "sub_ln703_1_fu_440_p2");
    sc_trace(mVcdFile, mul_ln128_fu_205_p1, "mul_ln128_fu_205_p1");
    sc_trace(mVcdFile, n_fu_221_p4, "n_fu_221_p4");
    sc_trace(mVcdFile, zext_ln105_fu_266_p1, "zext_ln105_fu_266_p1");
    sc_trace(mVcdFile, idx_1_fu_269_p2, "idx_1_fu_269_p2");
    sc_trace(mVcdFile, trunc_ln_fu_257_p4, "trunc_ln_fu_257_p4");
    sc_trace(mVcdFile, idx_2_fu_279_p3, "idx_2_fu_279_p3");
    sc_trace(mVcdFile, idx_3_fu_287_p3, "idx_3_fu_287_p3");
    sc_trace(mVcdFile, xor_ln100_fu_306_p2, "xor_ln100_fu_306_p2");
    sc_trace(mVcdFile, xor_ln96_fu_311_p2, "xor_ln96_fu_311_p2");
    sc_trace(mVcdFile, and_ln100_fu_316_p2, "and_ln100_fu_316_p2");
    sc_trace(mVcdFile, or_ln104_fu_322_p2, "or_ln104_fu_322_p2");
    sc_trace(mVcdFile, and_ln96_fu_327_p2, "and_ln96_fu_327_p2");
    sc_trace(mVcdFile, sub_ln703_2_fu_333_p2, "sub_ln703_2_fu_333_p2");
    sc_trace(mVcdFile, and_ln60_fu_347_p2, "and_ln60_fu_347_p2");
    sc_trace(mVcdFile, sub_ln703_3_fu_352_p2, "sub_ln703_3_fu_352_p2");
    sc_trace(mVcdFile, mul_ln700_fu_378_p0, "mul_ln700_fu_378_p0");
    sc_trace(mVcdFile, sext_ln1118_1_fu_369_p1, "sext_ln1118_1_fu_369_p1");
    sc_trace(mVcdFile, mul_ln700_fu_378_p1, "mul_ln700_fu_378_p1");
    sc_trace(mVcdFile, sext_ln1118_fu_366_p1, "sext_ln1118_fu_366_p1");
    sc_trace(mVcdFile, mul_ln1192_fu_384_p0, "mul_ln1192_fu_384_p0");
    sc_trace(mVcdFile, sext_ln1118_3_fu_375_p1, "sext_ln1118_3_fu_375_p1");
    sc_trace(mVcdFile, mul_ln1192_fu_384_p1, "mul_ln1192_fu_384_p1");
    sc_trace(mVcdFile, sext_ln1118_2_fu_372_p1, "sext_ln1118_2_fu_372_p1");
    sc_trace(mVcdFile, mul_ln1192_fu_384_p2, "mul_ln1192_fu_384_p2");
    sc_trace(mVcdFile, mul_ln700_fu_378_p2, "mul_ln700_fu_378_p2");
    sc_trace(mVcdFile, ret_V_fu_390_p2, "ret_V_fu_390_p2");
    sc_trace(mVcdFile, mul_ln700_1_fu_406_p0, "mul_ln700_1_fu_406_p0");
    sc_trace(mVcdFile, mul_ln700_1_fu_406_p1, "mul_ln700_1_fu_406_p1");
    sc_trace(mVcdFile, mul_ln1193_fu_412_p0, "mul_ln1193_fu_412_p0");
    sc_trace(mVcdFile, mul_ln1193_fu_412_p1, "mul_ln1193_fu_412_p1");
    sc_trace(mVcdFile, mul_ln700_1_fu_406_p2, "mul_ln700_1_fu_406_p2");
    sc_trace(mVcdFile, mul_ln1193_fu_412_p2, "mul_ln1193_fu_412_p2");
    sc_trace(mVcdFile, ret_V_1_fu_418_p2, "ret_V_1_fu_418_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, mul_ln128_fu_205_p10, "mul_ln128_fu_205_p10");
#endif

    }
}

shift::~shift() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete cos_table_U;
    delete sin_table_U;
}

void shift::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        m_0_reg_160 = m_reg_449.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        m_0_reg_160 = ap_const_lv16_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        phi_mul_reg_172 = add_ln128_reg_454.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_172 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln126_fu_183_p2.read(), ap_const_lv1_0))) {
        add_ln128_reg_454 = add_ln128_fu_195_p2.read();
        icmp_ln104_reg_482 = icmp_ln104_fu_245_p2.read();
        icmp_ln132_reg_487 = icmp_ln132_fu_251_p2.read();
        icmp_ln96_reg_469 = icmp_ln96_fu_231_p2.read();
        idx_reg_464 = mul_ln128_fu_205_p2.read().range(48, 43);
        mul_ln128_reg_459 = mul_ln128_fu_205_p2.read();
        tmp_reg_475 = mul_ln128_fu_205_p2.read().range(50, 50);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        and_ln104_reg_491 = and_ln104_fu_275_p2.read();
        zext_ln130_reg_501 = zext_ln130_fu_300_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ary_i_V_load_reg_539 = ary_i_V_q0.read();
        ary_r_V_load_reg_529 = ary_r_V_q0.read();
        p_Val2_1_reg_524 = p_Val2_1_fu_339_p3.read();
        p_Val2_3_reg_534 = p_Val2_3_fu_358_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        imag_V_reg_550 = ret_V_1_fu_418_p2.read().range(39, 8);
        real_V_reg_544 = ret_V_fu_390_p2.read().range(39, 8);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        m_reg_449 = m_fu_189_p2.read();
    }
}

void shift::thread_add_ln128_fu_195_p2() {
    add_ln128_fu_195_p2 = (!ap_const_lv31_B200.is_01() || !phi_mul_reg_172.read().is_01())? sc_lv<31>(): (sc_biguint<31>(ap_const_lv31_B200) + sc_biguint<31>(phi_mul_reg_172.read()));
}

void shift::thread_and_ln100_fu_316_p2() {
    and_ln100_fu_316_p2 = (xor_ln100_fu_306_p2.read() & xor_ln96_fu_311_p2.read());
}

void shift::thread_and_ln104_fu_275_p2() {
    and_ln104_fu_275_p2 = (icmp_ln104_reg_482.read() & tmp_reg_475.read());
}

void shift::thread_and_ln60_fu_347_p2() {
    and_ln60_fu_347_p2 = (tmp_reg_475.read() & xor_ln96_fu_311_p2.read());
}

void shift::thread_and_ln96_fu_327_p2() {
    and_ln96_fu_327_p2 = (or_ln104_fu_322_p2.read() & xor_ln96_fu_311_p2.read());
}

void shift::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void shift::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void shift::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void shift::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void shift::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void shift::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void shift::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln126_fu_183_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void shift::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void shift::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln126_fu_183_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void shift::thread_ary_i_V_address0() {
    ary_i_V_address0 =  (sc_lv<16>) (zext_ln130_fu_300_p1.read());
}

void shift::thread_ary_i_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ary_i_V_ce0 = ap_const_logic_1;
    } else {
        ary_i_V_ce0 = ap_const_logic_0;
    }
}

void shift::thread_ary_i_s_V_addr_gep_fu_152_p3() {
    ary_i_s_V_addr_gep_fu_152_p3 =  (sc_lv<16>) (zext_ln130_reg_501.read());
}

void shift::thread_ary_i_s_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        if (esl_seteq<1,1,1>(icmp_ln132_reg_487.read(), ap_const_lv1_1)) {
            ary_i_s_V_address0 = ary_i_s_V_addr_gep_fu_152_p3.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln132_reg_487.read())) {
            ary_i_s_V_address0 =  (sc_lv<16>) (zext_ln130_reg_501.read());
        } else {
            ary_i_s_V_address0 = "XXXXXXXXXXXXXXXX";
        }
    } else {
        ary_i_s_V_address0 = "XXXXXXXXXXXXXXXX";
    }
}

void shift::thread_ary_i_s_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln132_reg_487.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(icmp_ln132_reg_487.read(), ap_const_lv1_1)))) {
        ary_i_s_V_ce0 = ap_const_logic_1;
    } else {
        ary_i_s_V_ce0 = ap_const_logic_0;
    }
}

void shift::thread_ary_i_s_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        if (esl_seteq<1,1,1>(icmp_ln132_reg_487.read(), ap_const_lv1_1)) {
            ary_i_s_V_d0 = sub_ln703_1_fu_440_p2.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln132_reg_487.read())) {
            ary_i_s_V_d0 = imag_V_reg_550.read();
        } else {
            ary_i_s_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        ary_i_s_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void shift::thread_ary_i_s_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln132_reg_487.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(icmp_ln132_reg_487.read(), ap_const_lv1_1)))) {
        ary_i_s_V_we0 = ap_const_logic_1;
    } else {
        ary_i_s_V_we0 = ap_const_logic_0;
    }
}

void shift::thread_ary_r_V_address0() {
    ary_r_V_address0 =  (sc_lv<16>) (zext_ln130_fu_300_p1.read());
}

void shift::thread_ary_r_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ary_r_V_ce0 = ap_const_logic_1;
    } else {
        ary_r_V_ce0 = ap_const_logic_0;
    }
}

void shift::thread_ary_r_s_V_addr_gep_fu_144_p3() {
    ary_r_s_V_addr_gep_fu_144_p3 =  (sc_lv<16>) (zext_ln130_reg_501.read());
}

void shift::thread_ary_r_s_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        if (esl_seteq<1,1,1>(icmp_ln132_reg_487.read(), ap_const_lv1_1)) {
            ary_r_s_V_address0 = ary_r_s_V_addr_gep_fu_144_p3.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln132_reg_487.read())) {
            ary_r_s_V_address0 =  (sc_lv<16>) (zext_ln130_reg_501.read());
        } else {
            ary_r_s_V_address0 = "XXXXXXXXXXXXXXXX";
        }
    } else {
        ary_r_s_V_address0 = "XXXXXXXXXXXXXXXX";
    }
}

void shift::thread_ary_r_s_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln132_reg_487.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(icmp_ln132_reg_487.read(), ap_const_lv1_1)))) {
        ary_r_s_V_ce0 = ap_const_logic_1;
    } else {
        ary_r_s_V_ce0 = ap_const_logic_0;
    }
}

void shift::thread_ary_r_s_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        if (esl_seteq<1,1,1>(icmp_ln132_reg_487.read(), ap_const_lv1_1)) {
            ary_r_s_V_d0 = sub_ln703_fu_434_p2.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln132_reg_487.read())) {
            ary_r_s_V_d0 = real_V_reg_544.read();
        } else {
            ary_r_s_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        ary_r_s_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void shift::thread_ary_r_s_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln132_reg_487.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(icmp_ln132_reg_487.read(), ap_const_lv1_1)))) {
        ary_r_s_V_we0 = ap_const_logic_1;
    } else {
        ary_r_s_V_we0 = ap_const_logic_0;
    }
}

void shift::thread_cos_table_address0() {
    cos_table_address0 =  (sc_lv<7>) (zext_ln1265_fu_294_p1.read());
}

void shift::thread_cos_table_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        cos_table_ce0 = ap_const_logic_1;
    } else {
        cos_table_ce0 = ap_const_logic_0;
    }
}

void shift::thread_icmp_ln104_fu_245_p2() {
    icmp_ln104_fu_245_p2 = (!n_fu_221_p4.read().is_01() || !ap_const_lv8_C0.is_01())? sc_lv<1>(): (sc_biguint<8>(n_fu_221_p4.read()) < sc_biguint<8>(ap_const_lv8_C0));
}

void shift::thread_icmp_ln126_fu_183_p2() {
    icmp_ln126_fu_183_p2 = (!m_0_reg_160.read().is_01() || !ap_const_lv16_9C40.is_01())? sc_lv<1>(): sc_lv<1>(m_0_reg_160.read() == ap_const_lv16_9C40);
}

void shift::thread_icmp_ln132_fu_251_p2() {
    icmp_ln132_fu_251_p2 = (!n_fu_221_p4.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(n_fu_221_p4.read() == ap_const_lv8_0);
}

void shift::thread_icmp_ln96_fu_231_p2() {
    icmp_ln96_fu_231_p2 = (!n_fu_221_p4.read().is_01() || !ap_const_lv8_41.is_01())? sc_lv<1>(): (sc_biguint<8>(n_fu_221_p4.read()) < sc_biguint<8>(ap_const_lv8_41));
}

void shift::thread_idx_1_fu_269_p2() {
    idx_1_fu_269_p2 = (!ap_const_lv7_40.is_01() || !zext_ln105_fu_266_p1.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_40) - sc_biguint<7>(zext_ln105_fu_266_p1.read()));
}

void shift::thread_idx_2_fu_279_p3() {
    idx_2_fu_279_p3 = (!and_ln104_fu_275_p2.read()[0].is_01())? sc_lv<7>(): ((and_ln104_fu_275_p2.read()[0].to_bool())? zext_ln105_fu_266_p1.read(): idx_1_fu_269_p2.read());
}

void shift::thread_idx_3_fu_287_p3() {
    idx_3_fu_287_p3 = (!icmp_ln96_reg_469.read()[0].is_01())? sc_lv<7>(): ((icmp_ln96_reg_469.read()[0].to_bool())? trunc_ln_fu_257_p4.read(): idx_2_fu_279_p3.read());
}

void shift::thread_m_fu_189_p2() {
    m_fu_189_p2 = (!m_0_reg_160.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(m_0_reg_160.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void shift::thread_mul_ln1192_fu_384_p0() {
    mul_ln1192_fu_384_p0 =  (sc_lv<9>) (sext_ln1118_3_fu_375_p1.read());
}

void shift::thread_mul_ln1192_fu_384_p1() {
    mul_ln1192_fu_384_p1 =  (sc_lv<32>) (sext_ln1118_2_fu_372_p1.read());
}

void shift::thread_mul_ln1192_fu_384_p2() {
    mul_ln1192_fu_384_p2 = (!mul_ln1192_fu_384_p0.read().is_01() || !mul_ln1192_fu_384_p1.read().is_01())? sc_lv<40>(): sc_bigint<9>(mul_ln1192_fu_384_p0.read()) * sc_bigint<32>(mul_ln1192_fu_384_p1.read());
}

void shift::thread_mul_ln1193_fu_412_p0() {
    mul_ln1193_fu_412_p0 =  (sc_lv<9>) (sext_ln1118_3_fu_375_p1.read());
}

void shift::thread_mul_ln1193_fu_412_p1() {
    mul_ln1193_fu_412_p1 =  (sc_lv<32>) (sext_ln1118_fu_366_p1.read());
}

void shift::thread_mul_ln1193_fu_412_p2() {
    mul_ln1193_fu_412_p2 = (!mul_ln1193_fu_412_p0.read().is_01() || !mul_ln1193_fu_412_p1.read().is_01())? sc_lv<40>(): sc_bigint<9>(mul_ln1193_fu_412_p0.read()) * sc_bigint<32>(mul_ln1193_fu_412_p1.read());
}

void shift::thread_mul_ln128_fu_205_p1() {
    mul_ln128_fu_205_p1 =  (sc_lv<31>) (mul_ln128_fu_205_p10.read());
}

void shift::thread_mul_ln128_fu_205_p10() {
    mul_ln128_fu_205_p10 = esl_zext<63,31>(phi_mul_reg_172.read());
}

void shift::thread_mul_ln128_fu_205_p2() {
    mul_ln128_fu_205_p2 = (!ap_const_lv63_D1B71759.is_01() || !mul_ln128_fu_205_p1.read().is_01())? sc_lv<63>(): sc_biguint<63>(ap_const_lv63_D1B71759) * sc_biguint<31>(mul_ln128_fu_205_p1.read());
}

void shift::thread_mul_ln700_1_fu_406_p0() {
    mul_ln700_1_fu_406_p0 =  (sc_lv<9>) (sext_ln1118_1_fu_369_p1.read());
}

void shift::thread_mul_ln700_1_fu_406_p1() {
    mul_ln700_1_fu_406_p1 =  (sc_lv<32>) (sext_ln1118_2_fu_372_p1.read());
}

void shift::thread_mul_ln700_1_fu_406_p2() {
    mul_ln700_1_fu_406_p2 = (!mul_ln700_1_fu_406_p0.read().is_01() || !mul_ln700_1_fu_406_p1.read().is_01())? sc_lv<40>(): sc_bigint<9>(mul_ln700_1_fu_406_p0.read()) * sc_bigint<32>(mul_ln700_1_fu_406_p1.read());
}

void shift::thread_mul_ln700_fu_378_p0() {
    mul_ln700_fu_378_p0 =  (sc_lv<9>) (sext_ln1118_1_fu_369_p1.read());
}

void shift::thread_mul_ln700_fu_378_p1() {
    mul_ln700_fu_378_p1 =  (sc_lv<32>) (sext_ln1118_fu_366_p1.read());
}

void shift::thread_mul_ln700_fu_378_p2() {
    mul_ln700_fu_378_p2 = (!mul_ln700_fu_378_p0.read().is_01() || !mul_ln700_fu_378_p1.read().is_01())? sc_lv<40>(): sc_bigint<9>(mul_ln700_fu_378_p0.read()) * sc_bigint<32>(mul_ln700_fu_378_p1.read());
}

void shift::thread_n_fu_221_p4() {
    n_fu_221_p4 = mul_ln128_fu_205_p2.read().range(50, 43);
}

void shift::thread_or_ln104_fu_322_p2() {
    or_ln104_fu_322_p2 = (and_ln104_reg_491.read() | and_ln100_fu_316_p2.read());
}

void shift::thread_p_Val2_1_fu_339_p3() {
    p_Val2_1_fu_339_p3 = (!and_ln96_fu_327_p2.read()[0].is_01())? sc_lv<9>(): ((and_ln96_fu_327_p2.read()[0].to_bool())? sub_ln703_2_fu_333_p2.read(): cos_table_q0.read());
}

void shift::thread_p_Val2_3_fu_358_p3() {
    p_Val2_3_fu_358_p3 = (!and_ln60_fu_347_p2.read()[0].is_01())? sc_lv<9>(): ((and_ln60_fu_347_p2.read()[0].to_bool())? sub_ln703_3_fu_352_p2.read(): sin_table_q0.read());
}

void shift::thread_ret_V_1_fu_418_p2() {
    ret_V_1_fu_418_p2 = (!mul_ln700_1_fu_406_p2.read().is_01() || !mul_ln1193_fu_412_p2.read().is_01())? sc_lv<40>(): (sc_biguint<40>(mul_ln700_1_fu_406_p2.read()) - sc_biguint<40>(mul_ln1193_fu_412_p2.read()));
}

void shift::thread_ret_V_fu_390_p2() {
    ret_V_fu_390_p2 = (!mul_ln1192_fu_384_p2.read().is_01() || !mul_ln700_fu_378_p2.read().is_01())? sc_lv<40>(): (sc_biguint<40>(mul_ln1192_fu_384_p2.read()) + sc_biguint<40>(mul_ln700_fu_378_p2.read()));
}

void shift::thread_sext_ln1118_1_fu_369_p1() {
    sext_ln1118_1_fu_369_p1 = esl_sext<40,9>(p_Val2_1_reg_524.read());
}

void shift::thread_sext_ln1118_2_fu_372_p1() {
    sext_ln1118_2_fu_372_p1 = esl_sext<40,32>(ary_i_V_load_reg_539.read());
}

void shift::thread_sext_ln1118_3_fu_375_p1() {
    sext_ln1118_3_fu_375_p1 = esl_sext<40,9>(p_Val2_3_reg_534.read());
}

void shift::thread_sext_ln1118_fu_366_p1() {
    sext_ln1118_fu_366_p1 = esl_sext<40,32>(ary_r_V_load_reg_529.read());
}

void shift::thread_sin_table_address0() {
    sin_table_address0 =  (sc_lv<7>) (zext_ln1265_fu_294_p1.read());
}

void shift::thread_sin_table_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sin_table_ce0 = ap_const_logic_1;
    } else {
        sin_table_ce0 = ap_const_logic_0;
    }
}

void shift::thread_sub_ln703_1_fu_440_p2() {
    sub_ln703_1_fu_440_p2 = (!ap_const_lv32_0.is_01() || !imag_V_reg_550.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(imag_V_reg_550.read()));
}

void shift::thread_sub_ln703_2_fu_333_p2() {
    sub_ln703_2_fu_333_p2 = (!ap_const_lv9_0.is_01() || !cos_table_q0.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_0) - sc_biguint<9>(cos_table_q0.read()));
}

void shift::thread_sub_ln703_3_fu_352_p2() {
    sub_ln703_3_fu_352_p2 = (!ap_const_lv9_0.is_01() || !sin_table_q0.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_0) - sc_biguint<9>(sin_table_q0.read()));
}

void shift::thread_sub_ln703_fu_434_p2() {
    sub_ln703_fu_434_p2 = (!ap_const_lv32_0.is_01() || !real_V_reg_544.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(real_V_reg_544.read()));
}

void shift::thread_trunc_ln_fu_257_p4() {
    trunc_ln_fu_257_p4 = mul_ln128_reg_459.read().range(49, 43);
}

void shift::thread_xor_ln100_fu_306_p2() {
    xor_ln100_fu_306_p2 = (tmp_reg_475.read() ^ ap_const_lv1_1);
}

void shift::thread_xor_ln96_fu_311_p2() {
    xor_ln96_fu_311_p2 = (icmp_ln96_reg_469.read() ^ ap_const_lv1_1);
}

void shift::thread_zext_ln105_fu_266_p1() {
    zext_ln105_fu_266_p1 = esl_zext<7,6>(idx_reg_464.read());
}

void shift::thread_zext_ln1265_fu_294_p1() {
    zext_ln1265_fu_294_p1 = esl_zext<64,7>(idx_3_fu_287_p3.read());
}

void shift::thread_zext_ln130_fu_300_p1() {
    zext_ln130_fu_300_p1 = esl_zext<64,16>(m_0_reg_160.read());
}

void shift::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln126_fu_183_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

